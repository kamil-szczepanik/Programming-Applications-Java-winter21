{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js\";\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = event => {\n      event.preventDefault();\n      const USERTOKEN = window.response.accessToken;\n      let config = {\n        headers: {\n          'Authorization': `Bearer ${USERTOKEN}`,\n          'Access-Control-Allow-Origin': 'http://localhost:3000/'\n        }\n      };\n      alert(this.state.choosenAppoitment);\n\n      if (this.state.choosenAppoitment !== null) {\n        axios.post('http://localhost:8080/api/appointment/addPatientToAppointment', {\n          \"id\": parseInt(this.state.appDate.id)\n        }).then(response => {\n          console.log(response);\n          alert(\"Pomyślnie dodano wizytę!\");\n        }).catch(error => {\n          alert(\"Nie udało się dodać wizyty!\");\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      appDocID: null,\n      choosenAppoitment: null\n    };\n  }\n\n  componentDidMount() {\n    if (window.response !== undefined) {\n      DoctorService.getDoctors().then(response => {\n        this.setState({\n          doctors: response.data\n        });\n      });\n      AppointmentService.getAppointments().then(response => {\n        this.setState({\n          appointments: response.data\n        });\n      });\n    }\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  dateHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appDate: event.target.value\n    });\n    console.log(this.state.appDate);\n  }\n\n  timeHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appTime: event.target.value\n    });\n    console.log(this.state.appTime);\n  }\n\n  onChangeValue(event) {\n    this.setState({\n      appDocID: event.target.value\n    });\n    alert(this.state.appDocID);\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 46\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        id: \"appointment_form\",\n        onSubmit: this.handlePressedButton,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctorsInAppointmentCreating\",\n          onChange: this.onChangeValue.bind(this),\n          children: this.state.doctors.map(doctor => {\n            return (\n              /*#__PURE__*/\n              // <div className=\"doctorsInAppointmentCreating\">\n              //     <input type=\"radio\" id={doctor.id}\n              //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n              //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n              // </div>\n              _jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: doctor.id,\n                  name: \"doctors\",\n                  value: doctor.id,\n                  onChange: e => this.doctorIdHandleChange,\n                  required: true\n                }, doctor.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: doctor.firstName + doctor.lastName,\n                  children: doctor.firstName + doctor.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.appDate,\n          name: \"appointments\",\n          id: \"appointments\",\n          onChange: e => this.setState({\n            choosenAppoitment: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"--Wybierz Termin--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), this.state.appointments.map(appointment => {\n            if (appointment.patientId === null && parseInt(this.state.appDocID) === appointment.doctorId) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: appointment.id,\n                  children: appointment.date\n                }, appointment.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.appTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Dodaj wizyt\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js"],"names":["React","useState","props","DoctorService","AppointmentService","axios","useHistory","Redirect","AddAppointment","Component","constructor","handlePressedButton","event","preventDefault","USERTOKEN","window","response","accessToken","config","headers","alert","state","choosenAppoitment","post","parseInt","appDate","id","then","console","log","catch","error","doctors","appointments","appDocID","componentDidMount","undefined","getDoctors","setState","data","getAppointments","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","dateHandleChange","target","value","timeHandleChange","appTime","onChangeValue","render","today","bind","map","doctor","e","doctorIdHandleChange","firstName","lastName","appointment","patientId","doctorId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport {useHistory, Redirect} from \"react-router-dom\";\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            appDocID:null,\n            choosenAppoitment:null,\n\n\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });}\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n        const USERTOKEN = window.response.accessToken;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`,\n                'Access-Control-Allow-Origin':'http://localhost:3000/'}\n            };\n            alert(this.state.choosenAppoitment)\n        if (this.state.choosenAppoitment!==null){\n            axios.post('http://localhost:8080/api/appointment/addPatientToAppointment', {\"id\":parseInt(this.state.appDate.id)})\n            .then(response =>{\n                console.log(response)\n                alert(\"Pomyślnie dodano wizytę!\")\n            })\n            .catch(error=>{\n                alert(\"Nie udało się dodać wizyty!\")\n                console.log(error)\n            })\n        }\n        \n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n        alert(this.state.appDocID);\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>\n                {window.response===undefined?<Redirect to='/'/>:null}\n                <form  method=\"post\" id=\"appointment_form\" onSubmit={this.handlePressedButton}>\n                    <div className=\"doctorsInAppointmentCreating\" onChange={this.onChangeValue.bind(this)}>\n                    {this.state.doctors.map(doctor=>{\n                        return(\n                            \n                        // <div className=\"doctorsInAppointmentCreating\">\n                        //     <input type=\"radio\" id={doctor.id}\n                        //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                        //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                        // </div>\n                            <>\n                                \n                                    <input key={doctor.id} type=\"radio\" id={doctor.id}\n                                    name=\"doctors\" value={doctor.id} onChange={(e)=>this.doctorIdHandleChange} required/>\n                                    <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                                \n                            </>\n                        \n                        \n                            \n                        )\n                    })}\n                    </div>\n                \n                    {/* <div className=\"dateInAppointmentCreating\" >\n                        \n                            <label htmlFor=\"1\">Data wizyty:</label>\n                            <input value={this.state.appDate} onChange={(e)=>this.setState({appDate:e.target.value})} type=\"date\" id=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                    </div> */}\n                    <select value={this.state.appDate} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitment:e.target.value})}>\n                    <option value={null}>--Wybierz Termin--</option>\n                        {this.state.appointments.map(appointment=>{\n                            \n                            if ( appointment.patientId===null&&parseInt(this.state.appDocID)===appointment.doctorId){\n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )}\n                        })}\n                    </select>\n                  \n\n\n                    <p>{this.state.appTime}</p>\n                    <button type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n                \n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}