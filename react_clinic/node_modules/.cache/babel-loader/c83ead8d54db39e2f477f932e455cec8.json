{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport DoctorComponent from './components/DoctorComponent';\nimport AuthService from \"./services/auth.service\";\nimport { Component } from 'react'; // import AppointmentComponent from './components/AppointmentComponent';\n\nimport LoginComponent from './components/LoginComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: AuthService.getCurrentUser(),\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logOut();\n  }\n\n  render() {\n    const {\n      currentUser,\n      showModeratorBoard,\n      showAdminBoard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(DoctorComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: AuthService.login(\"marek\", \"123456\"),\n        children: \"CLICK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/App.js"],"names":["DoctorComponent","AuthService","Component","LoginComponent","App","constructor","props","logOut","bind","state","showModeratorBoard","showAdminBoard","currentUser","undefined","componentDidMount","user","getCurrentUser","setState","roles","includes","render","login"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAC,KADR;AAEXC,MAAAA,cAAc,EAAC,KAFJ;AAGXC,MAAAA,WAAW,EAACC;AAHD,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAGd,WAAW,CAACe,cAAZ,EAAb;;AACA,QAAID,IAAJ,EAAS;AACP,WAAKE,QAAL,CAAc;AACZL,QAAAA,WAAW,EAACX,WAAW,CAACe,cAAZ,EADA;AAEZN,QAAAA,kBAAkB,EAACK,IAAI,CAACG,KAAL,CAAWC,QAAX,CAAoB,gBAApB,CAFP;AAGZR,QAAAA,cAAc,EAAEI,IAAI,CAACG,KAAL,CAAWC,QAAX,CAAoB,YAApB;AAHJ,OAAd;AAKD;AACF;;AACDZ,EAAAA,MAAM,GAAE;AACNN,IAAAA,WAAW,CAACM,MAAZ;AACD;;AACDa,EAAAA,MAAM,GAAE;AACN,UAAM;AAACR,MAAAA,WAAD;AAAcF,MAAAA,kBAAd;AAAkCC,MAAAA;AAAlC,QAAoD,KAAKF,KAA/D;AAEF,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAER,WAAW,CAACoB,KAAZ,CAAkB,OAAlB,EAA0B,QAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AAjCyB;;AAoC5B,eAAejB,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DoctorComponent from './components/DoctorComponent';\nimport AuthService from \"./services/auth.service\";\nimport { Component } from 'react';\n// import AppointmentComponent from './components/AppointmentComponent';\nimport LoginComponent from './components/LoginComponent'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.state = {\n      showModeratorBoard:false,\n      showAdminBoard:false,\n      currentUser:undefined\n    };\n  }\n  componentDidMount(){\n    const user = AuthService.getCurrentUser();\n    if (user){\n      this.setState({\n        currentUser:AuthService.getCurrentUser(),\n        showModeratorBoard:user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n  logOut(){\n    AuthService.logOut();\n  }\n  render(){\n    const {currentUser, showModeratorBoard, showAdminBoard} = this.state;\n  \n  return (\n    <div className=\"App\">\n        <DoctorComponent />\n        <button type=\"button\" onClick={AuthService.login(\"marek\",\"123456\")} >CLICK</button>\n        {/* <AppointmentComponent /> */}\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}