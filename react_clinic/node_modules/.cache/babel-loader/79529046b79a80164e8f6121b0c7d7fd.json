{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const data = new FormData(this.form);\n      const params = new URLSearchParams(data);\n      const config = {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      const url = \"http://localhost:8080/login\";\n      axios.post(url, params, config).then(result => {\n        alert(\"Pomyślnie zalogowano!\");\n      }).catch(err => {\n        alert(\"Nie udalo się zalogować!\");\n      });\n    };\n\n    this.handleError = (field, errmsg) => {\n      if (!field) return;\n\n      if (errmsg) {\n        this.setState(prevState => ({\n          failure: '',\n          errcount: prevState.errcount + 1,\n          errmsgs: { ...prevState.errmsgs,\n            [field]: errmsg\n          }\n        }));\n      } else {\n        this.setState(prevState => ({\n          failure: '',\n          errcount: prevState.errcount === 1 ? 0 : prevState.errcount - 1,\n          errmsgs: { ...prevState.errmsgs,\n            [field]: ''\n          }\n        }));\n      }\n    };\n\n    this.renderError = () => {\n      if (this.state.errcount || this.state.failure) {\n        const errmsg = this.state.failure || Object.values(this.state.errmsgs).find(v => v);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    if (props.error) {\n      this.state = {\n        failure: 'wrong username,email or password!',\n        errcount: 0\n      };\n    } else {\n      this.state = {\n        errcount: 0\n      };\n    }\n  }\n\n  render() {\n    const inputs = this.props.inputs.map(({\n      name,\n      placeholder,\n      type,\n      value,\n      className\n    }, index) => /*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      placeholder: placeholder,\n      type: type,\n      value: value,\n      className: type === 'submit' ? className : '',\n      handleError: this.handleError\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this));\n    const errors = this.renderError();\n    return /*#__PURE__*/_jsxDEV(\"form\", { ...this.props,\n      onSubmit: this.handleSubmit,\n      ref: fm => {\n        this.form = fm;\n      },\n      children: [inputs, errors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLoginForm.propTypes = {\n  name: PropTypes.string,\n  action: PropTypes.string,\n  method: PropTypes.string,\n  inputs: PropTypes.array,\n  error: PropTypes.string\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginForm.js"],"names":["React","Component","PropTypes","Input","axios","LoginForm","constructor","props","handleSubmit","event","data","FormData","form","params","URLSearchParams","config","headers","url","post","then","result","alert","catch","err","handleError","field","errmsg","setState","prevState","failure","errcount","errmsgs","renderError","state","Object","values","find","v","error","render","inputs","map","name","placeholder","type","value","className","index","errors","fm","propTypes","string","action","method","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport axios from 'axios'\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        if(props.error) {\n            this.state = {\n              failure: 'wrong username,email or password!',\n              errcount: 0\n            }\n        } else {\n            this.state = { errcount: 0 }\n        }\n    }\n    handleSubmit = (event) => {\n        const data = new FormData(this.form)\n        const params = new URLSearchParams(data)\n        const config = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }\n    }\n        const url = \"http://localhost:8080/login\"\n        axios.post(url, params, config)\n        .then((result) => {\n        alert(\"Pomyślnie zalogowano!\")\n    })\n        .catch((err) => {\n        alert(\"Nie udalo się zalogować!\")\n\n        })\n    }\n    //     event.preventDefault()\n    //     if(!this.state.errcount) {\n    //         const data = new FormData(this.form)\n    //         fetch(this.form.action, {\n    //           method: this.form.method,\n    //           body: new URLSearchParams(data)\n    //         })\n    //         .then(v => {\n    //             if(v.redirected) window.location = v.url\n    //         })\n    //         .catch(e => console.warn(e))\n    //     }\n    // }\n    handleError = (field, errmsg) => {\n        if(!field) return\n\n        if(errmsg) {\n            this.setState((prevState) => ({\n                failure: '',\n                errcount: prevState.errcount + 1, \n                errmsgs: {...prevState.errmsgs, [field]: errmsg}\n            }))\n        } else {\n            this.setState((prevState) => ({\n                failure: '',\n                errcount: prevState.errcount===1? 0 : prevState.errcount-1,\n                errmsgs: {...prevState.errmsgs, [field]: ''}\n            }))\n        }\n    }\n\n    renderError = () => {\n        if(this.state.errcount || this.state.failure) {\n            const errmsg = this.state.failure \n              || Object.values(this.state.errmsgs).find(v=>v)\n            return <div className=\"error\">{errmsg}</div>\n        }\n    }\n\n    render() {\n        const inputs = this.props.inputs.map(\n          ({name, placeholder, type, value, className}, index) => (\n            <Input key={index} name={name} placeholder={placeholder} type={type} value={value}\n              className={type==='submit'? className : ''} handleError={this.handleError} />\n          )\n        )\n        const errors = this.renderError()\n        return (\n            <form {...this.props} onSubmit={this.handleSubmit} ref={fm => {this.form=fm}} >\n              {inputs}\n              {errors}\n            </form>\n        )\n    }\n}\n\nLoginForm.propTypes = {\n  name: PropTypes.string,\n  action: PropTypes.string,\n  method: PropTypes.string,\n  inputs: PropTypes.array,\n  error: PropTypes.string\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}