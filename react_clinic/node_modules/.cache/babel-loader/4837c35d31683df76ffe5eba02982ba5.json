{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment_Doctor.js\";\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport PatientService from '../services/PatientService';\nimport CreatePatient from './CreatePatient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = event => {\n      event.preventDefault();\n      var date = []; //DOKONCZYC\n\n      var year = this.state.appDate.toString().slice(0, 4);\n      var month = this.state.appDate.toString().slice(5, 7);\n      var day = this.state.appDate.toString().slice(8, 10);\n      alert(this.state.appTime.toString(0, 1)); // date.push()\n      // axios.post('http://localhost:8080/api/appointment', { \"patient_id\":this.state.appPacID, \"doctor_id\":this.state.appDocID,\"date\":date_String,})\n      // .then(response =>{\n      //     console.log(response)\n      //     alert(\"Pomyślnie dodano wizytę!\")\n      // })\n      // .catch(error=>{\n      //     alert(\"Nie udało się dodać wizyty!\")\n      //     console.log(error)\n      // })\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      patients: [],\n      appDate: null,\n      appTime: null,\n      appDocID: 1,\n      patient_pesel: null\n    };\n  }\n\n  componentDidMount() {\n    if (window.response !== undefined) {\n      DoctorService.getDoctors().then(response => {\n        this.setState({\n          doctors: response.data\n        });\n      });\n      AppointmentService.getAppointments().then(response => {\n        this.setState({\n          appointments: response.data\n        });\n      });\n      PatientService.getPatients().then(response => {\n        this.setState({\n          patients: response.data\n        });\n      });\n    }\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  createPatient() {}\n\n  createPatientIfNeeded() {\n    var isPatientCreated = false;\n    this.patients.map(patient => {\n      if (patient.pesel === this.state.patient_pesel) {\n        isPatientCreated = true;\n      }\n    });\n\n    if (isPatientCreated !== true) {\n      this.createPatient();\n    }\n  }\n\n  dateHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appDate: event.target.value\n    });\n    console.log(this.state.appDate);\n  }\n\n  timeHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appTime: event.target.value\n    });\n    console.log(this.state.appTime);\n  }\n\n  onChangeValue(event) {\n    this.setState({\n      appDocID: event.target.value\n    });\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        id: \"appointment_create_doc\",\n        onSubmit: this.handlePressedButton,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"start\",\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.appDate,\n          onChange: e => this.setState({\n            appDate: e.target.value\n          }),\n          type: \"date\",\n          id: \"app_date\",\n          name: \"app_date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"appt\",\n          children: \"Godzina:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.appTime,\n          onChange: e => this.setState({\n            appTime: e.target.value\n          }),\n          type: \"time\",\n          id: \"appt\",\n          name: \"appt\",\n          min: \"09:00\",\n          max: \"18:00\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.appTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Dodaj wizyt\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment_Doctor.js"],"names":["React","useState","props","DoctorService","AppointmentService","axios","PatientService","CreatePatient","AddAppointment","Component","constructor","handlePressedButton","event","preventDefault","date","year","state","appDate","toString","slice","month","day","alert","appTime","doctors","appointments","patients","appDocID","patient_pesel","componentDidMount","window","response","undefined","getDoctors","then","setState","data","getAppointments","getPatients","dateToString","given_date","delay","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","createPatient","createPatientIfNeeded","isPatientCreated","map","patient","pesel","dateHandleChange","target","value","console","log","timeHandleChange","onChangeValue","render","today","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport PatientService from '../services/PatientService';\nimport CreatePatient from './CreatePatient';\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            patients:[],\n            appDate:null,\n            appTime:null,\n            appDocID:1,\n            patient_pesel:null,\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        PatientService.getPatients().then((response)=>{\n            this.setState({patients: response.data})\n        });\n    }\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    createPatient(){\n        \n    }\n    createPatientIfNeeded(){\n        var isPatientCreated = false\n        this.patients.map(patient=>{\n            if (patient.pesel===this.state.patient_pesel){\n                isPatientCreated=true;\n            }\n        })\n\n        if (isPatientCreated!==true){\n            this.createPatient()\n        } \n\n    }\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n        var date = []\n        //DOKONCZYC\n        var year = this.state.appDate.toString().slice(0,4);\n        var month = this.state.appDate.toString().slice(5,7);\n        var day = this.state.appDate.toString().slice(8,10);\n        alert(this.state.appTime.toString(0,1))\n        // date.push()\n        // axios.post('http://localhost:8080/api/appointment', { \"patient_id\":this.state.appPacID, \"doctor_id\":this.state.appDocID,\"date\":date_String,})\n        // .then(response =>{\n        //     console.log(response)\n        //     alert(\"Pomyślnie dodano wizytę!\")\n        // })\n        // .catch(error=>{\n        //     alert(\"Nie udało się dodać wizyty!\")\n        //     console.log(error)\n        // })\n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>  \n                {/* <p>Jeżeli pacjent nie ma jeszcze konta:</p>\n                <CreatePatient/>\n\n\n\n                <br></br>\n                <br></br>\n\n                <form  method=\"post\" id=\"appointment_form_doc\" onSubmit={this.handlePressedButton}>\n                    <label htmlFor=\"pesel\">Pesel pacjenta</label>\n                    <input value={this.state.patient_pesel} onChange={e=>this.setState({petient_pesel:e.target.value})} type=\"text\" id=\"pesel\" name=\"pesel\"/>\n                    <br></br>\n                    <select value={this.state.appDate} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({appTime:e.target.value})}>\n                    <label htmlFor=\"appointments\">Wybierz termin:</label>\n                    <optgroup label=\"appointment:\">\n                        {this.state.appointments.map(appointment=>{\n\n                            if (this.state.appDocID===appointment.doctor_id && appointment.patient_id===\"\")return(\n                                <>\n                                    \n                                        <option value={appointment.date}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )\n                        })}\n                        </optgroup>\n                    </select>\n                  \n\n                    <p>{this.state.appTime}</p>\n                    <button type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n                 */}\n                <form  method=\"post\" id=\"appointment_create_doc\" onSubmit={this.handlePressedButton}>\n                <label for=\"start\">Data:</label>\n                <input value={this.state.appDate} onChange={e=>this.setState({appDate:e.target.value})} type=\"date\" id=\"app_date\" name=\"app_date\" />\n\n                <label for=\"appt\">Godzina:</label>\n                <input value={this.state.appTime}  onChange={e=>this.setState({appTime:e.target.value})} type=\"time\" id=\"appt\" name=\"appt\"\n                    min=\"09:00\" max=\"18:00\" required/>\n                    <p>{this.state.appTime}</p>\n                    <button type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}