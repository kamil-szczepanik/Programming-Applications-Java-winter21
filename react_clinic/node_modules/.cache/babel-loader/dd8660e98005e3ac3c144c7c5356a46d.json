{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js\";\nimport React from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctors: [],\n      appointments: []\n    };\n  }\n\n  componentDidMount() {\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.doctors.map(doctor => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctorsInAppointmentCreating\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: doctor.id,\n              name: doctor.firstName + doctor.lastName,\n              value: doctor.firstName + doctor.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: doctor.firstName + doctor.lastName,\n              children: doctor.firstName + doctor.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dateInAppointmentCreating\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: doctor.firstName + doctor.lastName,\n            children: \"Data wizyty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: doctor.id,\n            name: doctor.firstName + doctor.lastName,\n            min: this.dateToString(today, 2),\n            max: this.dateToString(today, 16),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: doctor.id,\n            name: doctor.firstName + doctor.lastName,\n            min: \"10:00\",\n            max: \"19:00\",\n            step: \"0:30\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js"],"names":["React","props","DoctorService","AppointmentService","AddAppointment","Component","constructor","state","doctors","appointments","componentDidMount","getDoctors","then","response","setState","data","getAppointments","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","render","today","map","doctor","id","firstName","lastName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    \n\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>\n                {this.state.doctors.map(doctor=>{\n                    return(\n                        <>\n                            <div className=\"doctorsInAppointmentCreating\">\n                                <input type=\"radio\" id={doctor.id}\n                                name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                                <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                            </div>\n                    \n                    \n                        </>\n                    )\n                })}\n                <div className=\"dateInAppointmentCreating\">\n                        <form>\n                            <label htmlFor={doctor.firstName + doctor.lastName}>Data wizyty:</label>\n                            <input type=\"date\" id={doctor.id} name={doctor.firstName + doctor.lastName} min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                            <input type=\"time\" id={doctor.id} name={doctor.firstName + doctor.lastName} min='10:00' max='19:00'  step=\"0:30\"required/>\n\n                        </form>\n                </div>\n        \n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}