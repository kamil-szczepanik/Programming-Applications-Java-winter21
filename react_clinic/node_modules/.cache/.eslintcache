[{"/home/michal/code/pap21l-z07/react_clinic/src/index.js":"1","/home/michal/code/pap21l-z07/react_clinic/src/App.js":"2","/home/michal/code/pap21l-z07/react_clinic/src/reportWebVitals.js":"3","/home/michal/code/pap21l-z07/react_clinic/src/services/serviceWorker.js":"4","/home/michal/code/pap21l-z07/react_clinic/src/services/auth.service.js":"5","/home/michal/code/pap21l-z07/react_clinic/src/components/DoctorComponent.js":"6","/home/michal/code/pap21l-z07/react_clinic/src/components/LoginComponent.js":"7","/home/michal/code/pap21l-z07/react_clinic/src/components/MAINAPP.js":"8","/home/michal/code/pap21l-z07/react_clinic/src/components/NavigationComponent.js":"9","/home/michal/code/pap21l-z07/react_clinic/src/components/ANOTHERLoginComponent.js":"10","/home/michal/code/pap21l-z07/react_clinic/src/services/DoctorService.js":"11","/home/michal/code/pap21l-z07/react_clinic/src/services/AuthenticationService.js":"12","/home/michal/code/pap21l-z07/react_clinic/src/components/LoginForm.js":"13","/home/michal/code/pap21l-z07/react_clinic/src/components/ContactComponent.js":"14","/home/michal/code/pap21l-z07/react_clinic/src/components/myAppointments.js":"15","/home/michal/code/pap21l-z07/react_clinic/src/components/StartComponent.js":"16","/home/michal/code/pap21l-z07/react_clinic/src/components/AddAppointment.js":"17","/home/michal/code/pap21l-z07/react_clinic/src/components/AddAppointment_Doctor.js":"18","/home/michal/code/pap21l-z07/react_clinic/src/components/myProfile.js":"19","/home/michal/code/pap21l-z07/react_clinic/src/components/PatientRegisterComponent.js":"20","/home/michal/code/pap21l-z07/react_clinic/src/components/DoctorRegisterComponent.js":"21","/home/michal/code/pap21l-z07/react_clinic/src/components/doctorProfile.js":"22","/home/michal/code/pap21l-z07/react_clinic/src/components/DeleteAppointmentPatient.js":"23","/home/michal/code/pap21l-z07/react_clinic/src/components/DeleteAppointmentDoctor.js":"24","/home/michal/code/pap21l-z07/react_clinic/src/components/ChangePasswordComponent.js":"25","/home/michal/code/pap21l-z07/react_clinic/src/components/Navbar.js":"26","/home/michal/code/pap21l-z07/react_clinic/src/components/context/context.js":"27","/home/michal/code/pap21l-z07/react_clinic/src/components/AuthenticatedRoute.jsx":"28","/home/michal/code/pap21l-z07/react_clinic/src/Input.js":"29","/home/michal/code/pap21l-z07/react_clinic/src/services/AppointmentService.js":"30","/home/michal/code/pap21l-z07/react_clinic/src/services/MyAppointmentsService.js":"31","/home/michal/code/pap21l-z07/react_clinic/src/services/DoctorAppointmentService.js":"32","/home/michal/code/pap21l-z07/react_clinic/src/services/PatientService.js":"33","/home/michal/code/pap21l-z07/react_clinic/src/components/CreatePatient.js":"34","/home/michal/code/pap21l-z07/react_clinic/src/services/getInfoAboutLoggedDoctor.js":"35","/home/michal/code/pap21l-z07/react_clinic/src/services/specialistionService.js":"36","/home/michal/code/pap21l-z07/react_clinic/src/components/RegistrationForm.js":"37","/home/michal/code/pap21l-z07/react_clinic/src/services/getInfoAboutLoggedPatient.js":"38"},{"size":634,"mtime":1623062636155,"results":"39","hashOfConfig":"40"},{"size":1381,"mtime":1623062636151,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1623062636155,"results":"42","hashOfConfig":"40"},{"size":5194,"mtime":1623062636155,"results":"43","hashOfConfig":"40"},{"size":833,"mtime":1623062636155,"results":"44","hashOfConfig":"40"},{"size":1545,"mtime":1623062636151,"results":"45","hashOfConfig":"40"},{"size":2711,"mtime":1623062636151,"results":"46","hashOfConfig":"40"},{"size":3108,"mtime":1623062636151,"results":"47","hashOfConfig":"40"},{"size":1948,"mtime":1623062636151,"results":"48","hashOfConfig":"40"},{"size":3808,"mtime":1623062636151,"results":"49","hashOfConfig":"40"},{"size":612,"mtime":1623062636155,"results":"50","hashOfConfig":"40"},{"size":3745,"mtime":1623062636155,"results":"51","hashOfConfig":"40"},{"size":2442,"mtime":1623062636151,"results":"52","hashOfConfig":"40"},{"size":400,"mtime":1623062636151,"results":"53","hashOfConfig":"40"},{"size":6346,"mtime":1623062787500,"results":"54","hashOfConfig":"40"},{"size":1254,"mtime":1623062636151,"results":"55","hashOfConfig":"40"},{"size":6964,"mtime":1623062787500,"results":"56","hashOfConfig":"40"},{"size":5165,"mtime":1623062636151,"results":"57","hashOfConfig":"40"},{"size":8134,"mtime":1623062636151,"results":"58","hashOfConfig":"40"},{"size":3153,"mtime":1623062636151,"results":"59","hashOfConfig":"40"},{"size":4517,"mtime":1623062636151,"results":"60","hashOfConfig":"40"},{"size":1475,"mtime":1623062636151,"results":"61","hashOfConfig":"40"},{"size":4488,"mtime":1623062636151,"results":"62","hashOfConfig":"40"},{"size":3702,"mtime":1623062636151,"results":"63","hashOfConfig":"40"},{"size":2566,"mtime":1623062636151,"results":"64","hashOfConfig":"40"},{"size":972,"mtime":1623062636151,"results":"65","hashOfConfig":"40"},{"size":99,"mtime":1623062636151,"results":"66","hashOfConfig":"40"},{"size":437,"mtime":1623062636151,"results":"67","hashOfConfig":"40"},{"size":1748,"mtime":1623062636151,"results":"68","hashOfConfig":"40"},{"size":566,"mtime":1623062636155,"results":"69","hashOfConfig":"40"},{"size":665,"mtime":1623062636155,"results":"70","hashOfConfig":"40"},{"size":543,"mtime":1623062636155,"results":"71","hashOfConfig":"40"},{"size":231,"mtime":1623062636155,"results":"72","hashOfConfig":"40"},{"size":2719,"mtime":1623062636151,"results":"73","hashOfConfig":"40"},{"size":646,"mtime":1623062636155,"results":"74","hashOfConfig":"40"},{"size":286,"mtime":1623062636155,"results":"75","hashOfConfig":"40"},{"size":3301,"mtime":1623062636151,"results":"76","hashOfConfig":"40"},{"size":652,"mtime":1623062636155,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ajnpvt",{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},"/home/michal/code/pap21l-z07/react_clinic/src/index.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/App.js",["179","180","181","182","183","184","185","186"],"import logo from './logo.svg';\nimport './App.css';\nimport DoctorComponent from './components/DoctorComponent';\nimport AuthService from \"./services/auth.service\";\nimport { Component } from 'react';\n// import AppointmentComponent from './components/AppointmentComponent';\nimport LoginComponent from './components/LoginComponent';\nimport MainAPP from './components/MAINAPP';\nimport NavigationComponent from './components/NavigationComponent';\nimport ANOTHERLoginComponent from './components/ANOTHERLoginComponent';\nimport USERTOKEN from './components/ANOTHERLoginComponent';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.state = {\n      showModeratorBoard:false,\n      showAdminBoard:false,\n      currentUser:undefined,\n      loggedUserdata:window.response,\n\n    };\n  }\n  componentDidMount(){\n    const user = AuthService.getCurrentUser();\n    \n    if (user){\n      this.setState({\n        currentUser:ANOTHERLoginComponent.getToken(),\n        showModeratorBoard:user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n  logOut(){\n    AuthService.logOut();\n  }\n\n  render(){\n    const {currentUser, showModeratorBoard, showAdminBoard} = this.state;\n  return (\n    <div className=\"App\">\n\n      <MainAPP />\n\n    </div>\n  );\n  }\n}\n\nexport default App;\n","/home/michal/code/pap21l-z07/react_clinic/src/reportWebVitals.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/services/serviceWorker.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/services/auth.service.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/DoctorComponent.js",["187","188"],"import React from 'react';\nimport DoctorService from '../services/DoctorService';\nimport props from 'prop-types';\nimport {useHistory, Redirect} from \"react-router-dom\";\n\nclass DoctorComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n    }\n    }\n    render(){\n        return(\n\n                <div className=\"container mt-3\">\n                    <h1 className=\"m-4\">Nasza załoga</h1>\n                        <div class=\"row row-cols-1 row-cols-md-3 g-2 g-md-3\">\n                {window.response===undefined?<Redirect to='/'/>:null}\n\n                {\n                this.state.doctors.map(\n                doctor=>{\n                    \n                    return <>\n                            <div className=\"col\">\n                                <div class=\"card p-3 h-100 bg-light\">\n\n                                    <p className= \"text-dark\" key={doctor.id}> Imie:{doctor.firstName}<br></br> Nazwisko: {doctor.lastName} <br></br>Specjalizacja: {doctor.specialisation}</p>\n                                </div>\n\n                            </div>\n                            </>\n                }\n                )\n            }\n               </div>\n               </div>\n\n                \n        )\n    }\n}\n\nexport default DoctorComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/LoginComponent.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/MAINAPP.js",["189","190","191","192","193","194"],"import React from 'react';\nimport props from 'prop-types';\nimport DoctorComponent from './DoctorComponent';\nimport LoginComponent from './LoginComponent';\nimport NavigationComponent from './NavigationComponent';\nimport { BrowserRouter, Route,NavLink, Switch, Redirect } from 'react-router-dom';\nimport StartComponent from './StartComponent';\nimport ContactComponent from './ContactComponent';\nimport MyAppointments from './myAppointments';\nimport AddAppointment from './AddAppointment';\nimport AddAppointment_Doctor from './AddAppointment_Doctor';\nimport AuthenticationService from '../services/AuthenticationService';\nimport MyProfile from './myProfile';\nimport RegistrationComponent from './PatientRegisterComponent';\nimport RegistrationComponentDoctor from './DoctorRegisterComponent';\nimport ANOTHERLoginComponent from './ANOTHERLoginComponent';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport Navi from './Navbar';\nimport doctorProfile from '../components/doctorProfile';\nimport DeleteAppointmentPatient from './DeleteAppointmentPatient';\nimport DeleteAppointmentDoctor from './DeleteAppointmentDoctor';\nimport ChangePasswordComponent from './ChangePasswordComponent';\n\nclass MainAPP extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isLogged:false,\n        }\n    }\n    setIsLogged(){\n        alert(\"dziala\");\n        this.setState({\n            isLogged:true\n        })\n    }\n    render(){\n        return(\n        <>\n            \n            <BrowserRouter>\n            \n              <NavigationComponent/>\n                \n                <Switch>\n                    <Route path='/register' component={RegistrationComponent}/>\n                    <Route path='/registerDoctor' component={RegistrationComponentDoctor}/>\n\n                    <Route path='/login' component={ANOTHERLoginComponent} action={this.isLogged}/>\n                    <Route path='/deleteAppointment' component={DeleteAppointmentPatient} />\n                    <Route path='/deleteAppointmentDoctor' component={DeleteAppointmentDoctor} />\n                    <Route path='/changePassword' exact component={ChangePasswordComponent}/>\n\n                    <Route path='/' exact component={StartComponent}/>\n                    <Route path='/doctors' exact component={DoctorComponent}/>\n                    \n                    <Route path='/contact' component={ContactComponent}/>\n                    <Route path='/appointments' component={MyAppointments}/>\n                    <Route path='/addAppointment' component={AddAppointment}/>\n                    <Route path='/addAppointmentDoctor' component={AddAppointment_Doctor}/>\n                    <AuthenticatedRoute path=\"/\" exact component={StartComponent} />\n                    <Route path='/myProfile' component={MyProfile}/>\n                    <Route path='/myProfileDoctor' component={doctorProfile}/>\n\n\n                    <Route component={StartComponent}/>\n                </Switch>\n\n            </BrowserRouter>\n            \n\n        </>\n        );\n        \n\n     \n    }\n}\n\nexport default MainAPP;","/home/michal/code/pap21l-z07/react_clinic/src/components/NavigationComponent.js",["195","196","197","198","199"],"import React, { Component } from 'react'\nimport props from 'prop-types';\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\n\n\nclass NavigationComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            clicked:\"doctors\",\n        }\n        this.handleDoctorClick.bind(this);\n        this.handleLoginClick.bind(this);\n    }\n    \n    handleDoctorClick(){\n        console.log(\"doctors\");\n        this.setState((state,props)=>({\n            clicked:\"doctors\"\n            \n        }));\n    }\n    handleLoginClick(){\n        this.setState((state,props)=>({\n            clicked:\"login\"\n        }));\n    }\n    render(){\n        return(\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark p-0\">\n            <div class=\"container-fluid\">\n                <NavLink to=\"/\" className=\"navbar-brand\" id=\"brand\">Clinic</NavLink>\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                <div class=\"navbar-nav ms-auto\">\n                    <NavLink to=\"/login\" className=\"nav-link\">Zaloguj się</NavLink>\n\n                    <NavLink to=\"/doctors\" className=\"nav-link\">Doktorzy</NavLink>\n                    \n                    <NavLink to=\"/myProfile\" className=\"nav-link\">Mój profil</NavLink>\n\n                    <NavLink to=\"/addAppointment\" className=\"nav-link\">Dodaj wizytę</NavLink>\n\n                    <NavLink to=\"/appointments\" className=\"nav-link\">Moje wizyty</NavLink>\n\n                </div>\n                </div>\n            </div>\n            </nav>\n        )\n        }\n\n        \n\n}\nexport default NavigationComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/ANOTHERLoginComponent.js",["200"],"import React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport context from '../components/context/context';\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false,\n            accountID:null,\n            email:null,\n            roles:null,\n            accessToken:null,\n            tokenType:null,\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n    getToken(){\n        return this.state.getToken;\n    }\n    loginClicked() {\n\n        AuthenticationService\n            .executeBasicAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                this.setState({accountID:response.data.id,\n                    email:response.data.email,\n                    roles:response.data.roles,\n                    accessToken:response.data.accessToken,\n                    tokenType:response.data.tokenType})\n                window.response=response.data;\n                alert(\"Zalogowano pomyślnie\")\n                \n                AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n                window.response.roles[0]===\"PATIENT\"?this.props.history.push(`/myProfile`):this.props.history.push(`/myProfile`);\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"col-md-8 m-auto mt-3\">\n                    <form>\n                        <h1>Logowanie</h1>\n                        {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                        {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Niepoprawne dane</div>}\n                        {this.state.showSuccessMessage && <div>Zalogowano pomyślnie</div>}\n                        {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n        \n                        <div className=\"row form-group\">\n                            <label for=\"username\" className=\"col-md-4 col-form-label text-md-end\">Nazwa Użytkownika:</label>\n                            <div className=\"col-md-6 my-auto\">\n                                <input className=\"form-control\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                            \n                        <div className=\"row form-group mb-3\">\n                        \n                            <label for=\"password\" className=\"col-md-4 col-form-label text-md-end\">Hasło:</label>\n                        \n                            <div className=\"col-md-6 my-auto\">\n                                <input className=\"form-control\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                            \n                    </form>\n                    <button className=\"btn btn-outline-light btn-lg\" type=\"submit\" onClick={this.loginClicked}>Login</button>\n                </div>\n                    \n                \n            </div>\n                \n        )\n    }\n}\n\nexport default LoginComponent","/home/michal/code/pap21l-z07/react_clinic/src/services/DoctorService.js",["201","202"],"import axios from 'axios';\nimport LoginComponent from '../components/ANOTHERLoginComponent';\nimport context from '../components/context/context';\nconst DOCTORS_REST_API_URL = 'http://localhost:8080/api/doctor';\n\nclass DoctorService{\n\n    getDoctors(){\n        var USERTOKEN = window.response.accessToken;\n\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n        return axios.get(DOCTORS_REST_API_URL, config);\n        \n    }\n}\n\nexport default new DoctorService();","/home/michal/code/pap21l-z07/react_clinic/src/services/AuthenticationService.js",["203","204"],"import axios from 'axios'\n\nconst INSTRUCTOR = 'in28minutes'\nconst PASSWORD = 'dummy'\nconst COURSE_API_URL = 'http://localhost:8080'\nconst DOCTORS_REST_API_URL = `${COURSE_API_URL}/api/${INSTRUCTOR}`\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n\nclass AuthenticationService {\n\n    executeBasicAuthenticationService(username, password) {\n        // return axios.get(`http://localhost:8080/api/auth/signin`,\n        //     { headers: { authorization: this.createBasicAuthToken(username, password) } })\n        return axios.post('http://localhost:8080/api/auth/signin', {'username':username,'password':password})\n        // .then(response =>{\n        //     getResponse=response;\n        // })\n    }\n\n    createBasicAuthToken(username, password) {\n        return 'Basic ' + window.btoa(username + \":\" + password)\n    }\n    registerSuccessfulLogin(username, password) {\n        //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n        //console.log('registerSuccessfulLogin')\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn) {\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\nexport default new AuthenticationService()\n// import axios from 'axios'\n\n// const API_URL = 'http://localhost:8080'\n\n// export const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n// class AuthenticationService {\n\n//     executeBasicAuthenticationService(username, password) {\n//         return axios.get(`${API_URL}/basicauth`,\n//             { headers: { authorization: this.createBasicAuthToken(username, password) } })\n//     }\n\n//     executeJwtAuthenticationService(username, password) {\n//         console.log(username);\n//         return axios.post(`${API_URL}/authenticate`, {\n//             username,\n//             password\n//         })\n//     }\n\n//     createBasicAuthToken(username, password) {\n//         return 'Basic ' + window.btoa(username + \":\" + password)\n//     }\n\n//     registerSuccessfulLogin(username, password) {\n//         //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n//         //console.log('registerSuccessfulLogin')\n//         sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n//         this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\n//     }\n\n//     registerSuccessfulLoginForJwt(username, token) {\n//         sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n//         this.setupAxiosInterceptors(this.createJWTToken(token))\n//     }\n\n//     createJWTToken(token) {\n//         return 'Bearer ' + token\n//     }\n\n\n//     logout() {\n//         sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n//     }\n\n//     isUserLoggedIn() {\n//         let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n//         if (user === null) return false\n//         return true\n//     }\n\n//     getLoggedInUserName() {\n//         let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n//         if (user === null) return ''\n//         return user\n//     }\n\n//     setupAxiosInterceptors(token) {\n//         axios.interceptors.request.use(\n//             (config) => {\n//                 if (this.isUserLoggedIn()) {\n//                     config.headers.authorization = token\n//                 }\n//                 return config\n//             }\n//         )\n//     }\n// }\n\n// export default new AuthenticationService()","/home/michal/code/pap21l-z07/react_clinic/src/components/LoginForm.js",["205","206","207","208","209"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport axios from 'axios'\nimport { Redirect } from 'react-router';\nimport { useHistory, withRouter} from \"react-router-dom\";\nimport AuthenticationService from '../services/AuthenticationService';\n\nclass LoginForm extends Component {\n    \n    constructor(props){\n        super(props);\n\n        this.state = {\n            username:'',\n            password:'',            \n        }\n    }\n    handleSubmit = (event) =>{\n        const data = new FormData(this.form)\n\n        AuthenticationService.executeBasicAuthenticationService(data.get('username'), data.get('password')).then(()=>{\n            this.props.history.push('/')\n        \n        }).catch(()=>{\n        console.log('blad');\n        })\n        // event.preventDefault()\n        // const data = new FormData(this.form)\n        \n        // this.props.history.push('/homepage');\n\n        // alert(data.get('username'))\n        // axios.post('http://localhost:8080/api/auth/signin', {'username':data.get('username'),\n        // 'password':data.get('password')})\n        // .then(response =>{\n        //     this.props.history.push('/');\n        //   console.log(\"1\")\n        //     alert(\"Pomyślnie zalogowano!\");\n            \n        // })\n        // .catch(error=>{\n        //     this.props.history.push('/');\n\n\n        //     console.log(\"2\")\n\n        //     alert(\"Nie udało się zalogować!\");\n        //     console.log(error);\n\n        // });\n        // <Redirect push to=\"http://localhost:3000/\" />\n\n    }\n   \n    render() {\n        return(\n            <>\n                \n                <form  method=\"post\" id=\"login_form\" onSubmit={this.handlePressedButton}>\n                <div>\n                    <label htmlFor=\"username\">Email:</label>\n                    <input onChange={(e)=>this.setState({username:e.target.value})} type=\"text\" id=\"username\" name=\"username\" required/>\n                </div>\n                <div>\n                    <label htmlFor=\"pass\">Password</label>\n                    <input onChange={(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"pass\" name=\"password\" required/>\n                </div>    \n                                    \n                    <button type='submit'>Zaloguj się</button>\n                    \n                </form>\n            </>\n\n        )\n    }\n}\nexport default withRouter(LoginForm)","/home/michal/code/pap21l-z07/react_clinic/src/components/ContactComponent.js",["210","211"],"import React from 'react';\nimport props from 'prop-types';\nimport {useHistory} from \"react-router-dom\";\n\nclass ContactComponent extends React.Component{\n\n\n    \n    render(){\n        return(\n            <>\n                <h2>Kontakt</h2>\n                <p>Wszystkie dane do kontaktu są w stopce na dole strony</p>\n            </>\n                \n        )\n    }\n}\n\nexport default ContactComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/myAppointments.js",["212","213","214","215","216","217","218","219","220","221","222"],"import React from 'react';\nimport props from 'prop-types';\nimport {useHistory, Redirect} from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport ContactComponent from './ContactComponent'\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nclass MyAppointments extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            myAppointmentsDoctor:[],\n            \n        }\n    }\n\n    componentDidMount(){\n        if(window.response!==undefined){\n            if (window.response.roles[0]===\"PATIENT\"){\n            MyAppointmentsService.getMyAppointments().then((response)=>{\n                this.setState({myAppointments: response.data})\n            });\n            DoctorService.getDoctors().then((response)=>{\n                this.setState({doctors: response.data})\n            });\n            }\n            if(window.response.roles[0]===\"DOCTOR\"){\n                console.log(\"wykonano dla doktora\")\n                DoctorAppointmentService.getAppointments().then((response)=>{\n                    this.setState({myAppointmentsDoctor: response.data})\n                });\n            }\n\n    }}\n       \n    render(){\n        var docId=null;\n        var docName=null;\n        var docSurname=null;\n        var docSpecialisation=null;\n        if(window.response===undefined){\n            return(\n                window.response===undefined?<Redirect to='/'/>:null\n                )\n        }\n        if(window.response.roles[0]===\"ADMIN\"){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n            return(\n\n                <div className=\"container mt-3\">\n                    <h1>Moje wizyty</h1> \n                    \n                    <div className=\"row\">\n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                        \n                        this.state.myAppointments.map(\n                            appointment=>{\n                                this.state.doctors.forEach(\n                                    doctor=>{\n                                        if(doctor.id===appointment.doctorId){\n                                            docId=doctor.id;\n                                            docName=doctor.firstName;\n                                            docSurname=doctor.lastName;    \n                                            docSpecialisation=doctor.specialisation;\n                                        }\n                                        \n                                    })\n                                    \n                                    return (\n                                        <div className=\"col-md-4 gy-3\">\n                            <div className=\"card\">\n                            <p className = \"appointment text-dark\" key={\"doctor\"+appointment.id}><span className=\"text-gray\">Doktor:</span> {docName+\" \"+docSurname}</p>\n                            <p className = \"appointment text-dark\" key={\"doctor\"+appointment.id}><span className=\"text-gray\">Specjalizacja:</span> {docSpecialisation}</p>\n\n                            <p className = \"appointment text-dark\" key={appointment.id+1000}>Data wizyty: {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            </div>\n                        </div>)\n\n}\n                    )\n                }\n                <div className=\"row my-3\">\n                <NavLink to=\"/deleteAppointment\"><button type=\"button\" className=\"btn btn-outline-danger btn-lg\">Usuń wizytę</button></NavLink>\n                </div>\n                </div>\n                </div>\n                    \n            )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n\n                <div className=\"container mt-5\">\n                    <h1>Wizyty</h1>\n                    <h2>Dostępne terminy</h2> \n                    <div class=\"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\">\n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                    \n                    this.state.myAppointmentsDoctor.map(\n                    appointment=>{\n                        if (appointment.patientId===null){\n\n                        \n                        return (\n                        <>\n                            <div className=\"col\">\n                                <div class=\"card p-3 h-100 bg-light text-center justify-content-center\">\n\n                                <p className= \"text-dark m-auto\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n\n                                </div>\n\n                            </div>\n                        </>)\n                        }\n\n                    }\n                    )\n                }\n                </div>\n                <h2>Zajęte terminy</h2> \n                <div class=\"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\">\n                    {\n                    \n                    this.state.myAppointmentsDoctor.map(\n                    appointment=>{\n                        if (appointment.patientId!==null){\n\n                        \n                        return (\n                        <>\n                        <div className=\"col\">\n                                <div class=\"card p-3 h-100 bg-light text-center justify-content-center\">\n                            <p className = \"text-dark m-auto\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            </div>\n                            </div>\n                        </>)\n                        }\n\n                    }\n                    )\n                }\n                </div>\n                </div>\n            )\n        }\n    }\n}\n\n\nexport default MyAppointments;","/home/michal/code/pap21l-z07/react_clinic/src/components/StartComponent.js",["223","224"],"import React from 'react';\nimport props from 'prop-types';\nimport {NavLink, useHistory} from \"react-router-dom\";\n\nclass StartComponent extends React.Component{\n    \n    render(){\n        return(\n            <div className=\"container-fluid\" id=\"front\">\n                <div className=\"container py-5\">\n                    <div className=\"bg-dark col-md-7 col-lg-6 m-auto rounded-3 pb-5 px-5 pt-2\" id=\"jumbo\">\n                <i className=\"fa fa-lock p-3\" aria-hidden=\"true\"></i>\n            <p>Aby uzyskać dostęp do strony, musisz być zalogowany</p>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <NavLink to='/register' exact><button className=\"btn btn-outline-light btn-sm-lg m-2\">Rejestracja</button></NavLink>\n                    </div>\n                    <div class=\"col\">\n                        <NavLink to='/login' exact><button className=\"btn btn-outline-light btn-sm-lg m-2\">Logowanie</button></NavLink>\n                        \n                    </div>\n                    \n                </div>\n                \n            </div>\n            </div>\n            </div>\n            </div>\n             \n        )\n    }\n}\n\nexport default StartComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/AddAppointment.js",["225","226","227","228","229","230","231","232"],"import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport specialisationService from '../services/specialistionService';\nimport axios from 'axios';\nimport {useHistory, Redirect} from \"react-router-dom\";\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            appDocID:null,\n            choosenAppoitmentId:null,\n            specialisations:null,\n\n\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        specialisationService.getSpecialisation().then((response)=>{\n            this.setState({specialisations: response.data})\n        });}\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n        const USERTOKEN = window.response.accessToken;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`,\n                'Access-Control-Allow-Origin':'http://localhost:3000/'}\n            };\n        if (this.state.choosenAppoitmentId!==null){\n            axios.post('http://localhost:8080/api/appointment/addPatientToAppointment', {\"id\":parseInt(this.state.choosenAppoitmentId)})\n            .then(response =>{\n                console.log(response)\n                alert(\"Pomyślnie dodano wizytę!\")\n                this.props.history.push('/myProfile')\n            })\n            .catch(error=>{\n                alert(\"Nie udało się dodać wizyty!\")\n                this.props.history.push('/myProfile')\n\n                console.log(error)\n            })\n        }\n        \n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        if(window.response===undefined){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n                <Redirect to='/addAppointmentDoctor'/>\n                )\n        }\n        if(window.response.roles[0]===\"ADMIN\"){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n        return(\n            <div className=\"container\">\n                \n                {window.response.roles[0]===\"DOCTOR\"?<Redirect to='/addAppointmentDoctor'/>:null}\n\n                <form  method=\"post\" id=\"appointment_form\" onSubmit={this.handlePressedButton}>\n                    <div className=\"doctorsInAppointmentCreating\" onChange={this.onChangeValue.bind(this)}>\n                    {this.state.doctors.map(doctor=>{\n                        return(\n                            \n                        // <div className=\"doctorsInAppointmentCreating\">\n                        //     <input type=\"radio\" id={doctor.id}\n                        //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                        //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                        // </div>\n                            <div className=\"pb-1\">\n                                \n                                    <input className=\"form-check-input\" key={doctor.id} type=\"radio\" id={doctor.id}\n                                    name=\"doctors\" value={doctor.id} onChange={(e)=>this.doctorIdHandleChange} required/>\n                                    <label className=\"form-check-label\" htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName +\" \"+ doctor.lastName +\" \"+ doctor.specialisation}</label>\n                                    <br></br>\n                                \n                            </div>\n                        \n                        \n                            \n                        )\n                    })}\n                    </div>\n                \n                    {/* <div className=\"dateInAppointmentCreating\" >\n                        \n                            <label htmlFor=\"1\">Data wizyty:</label>\n                            <input value={this.state.appDate} onChange={(e)=>this.setState({appDate:e.target.value})} type=\"date\" id=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                    </div> */}\n                    <div className=\"col-5 m-auto\">\n                    <select className=\"form-select\" value={this.state.appDate} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitmentId:e.target.value})}>\n                    <option value={null}>-----Wybierz Termin-----</option>\n                        {this.state.appointments.map(appointment=>{\n                            \n                            if ( appointment.patientId===null&&parseInt(this.state.appDocID)===appointment.doctorId){\n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )}\n                        })}\n                    </select>\n                    </div>\n\n\n                    <p>{this.state.appTime}</p>\n                    <button className=\"btn btn-outline-light btn-lg\" type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n                \n           </div> \n        )\n    }\n}\n}\n\nexport default AddAppointment;","/home/michal/code/pap21l-z07/react_clinic/src/components/AddAppointment_Doctor.js",["233","234","235","236","237","238","239"],"import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport PatientService from '../services/PatientService';\nimport CreatePatient from './CreatePatient';\nimport getInfoAboutLoggedDoctor from '../services/getInfoAboutLoggedDoctor';\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            patients:[],\n            appDate:null,\n            appTime:null,\n            appDocID:null,\n            patient_pesel:null,\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        PatientService.getPatients().then((response)=>{\n            this.setState({patients: response.data})\n        });\n        getInfoAboutLoggedDoctor.getInfo().then((response)=>{\n            this.setState({appDocID: response.data.id})\n        })\n    }\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    createPatient(){\n        \n    }\n    createPatientIfNeeded(){\n        var isPatientCreated = false\n        this.patients.map(patient=>{\n            if (patient.pesel===this.state.patient_pesel){\n                isPatientCreated=true;\n            }\n        })\n\n        if (isPatientCreated!==true){\n            this.createPatient()\n        } \n\n    }\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n        var date = []\n        const USERTOKEN=window.response.accessToken;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n        //DOKONCZYC\n        var year = parseInt(this.state.appDate.toString().slice(0,4));\n        var month = parseInt(this.state.appDate.toString().slice(5,7));\n        var day = parseInt(this.state.appDate.toString().slice(8,10));\n        var hour = parseInt(this.state.appTime.toString().slice(0,2));\n        var minute = parseInt(this.state.appTime.toString().slice(3,5));\n\n        date.push(year,month,day,hour,minute);\n        axios.post('http://localhost:8080/api/appointment/registerNewAppointment', {\n    \"doctorId\": this.state.appDocID.toString(),\n    \"date\": [year, month, day, hour, minute]\n    }, config)\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie dodano wizytę!\")\n        })\n        .catch(error=>{\n            alert(\"Nie udało się dodać wizyty!\")\n            console.log(error)\n        })\n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <div className=\"container\">\n            <div className=\"col-md-8 m-auto mt-3\">\n            <h1 className=\"mt-5\">Dodawanie wizyt</h1>\n                <form  method=\"post\" id=\"appointment_create_doc\" onSubmit={this.handlePressedButton}>\n                <div className=\"row form-group\">\n                <label className=\"col-md-4 col-form-label text-md-end\" for=\"start\">Data:</label>\n                <div className=\"col-md-6 my-auto\">\n                <input className=\"form-control text-center\" value={this.state.appDate} onChange={e=>this.setState({appDate:e.target.value})} type=\"date\" id=\"app_date\" name=\"app_date\" />\n                </div>\n                </div>\n                <div className=\"row form-group\">\n                <label className=\"col-md-4 col-form-label text-md-end\" for=\"appt\">Godzina:</label>\n                <div className=\"col-md-6 my-auto\">\n                <input className=\"form-control text-center\" value={this.state.appTime}  onChange={e=>this.setState({appTime:e.target.value})} type=\"time\" id=\"appt\" name=\"appt\"\n                    min=\"09:00\" max=\"18:00\" required/>\n                </div>\n                </div>\n                    <button className=\"btn btn-outline-light btn-lg my-3\" type='submit'>Dodaj wizytę</button>\n                \n                </form>\n           </div>\n           </div> \n        )\n    }\n}\n\nexport default AddAppointment;","/home/michal/code/pap21l-z07/react_clinic/src/components/myProfile.js",["240","241","242","243","244","245"],"import React from 'react';\nimport props from 'prop-types';\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport PatientService from '../services/PatientService';\nimport \"./myProfile.css\"\nimport getInfoAboutLoggedDoctor from '../services/getInfoAboutLoggedDoctor';\nimport getInfoAboutLoggedPatient from '../services/getInfoAboutLoggedPatient';\nclass MyProfile extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            //do wpisania tutaj jak bedzie logowanie\n            id:null,\n            name:null,\n            surname:null,\n            dob:null,\n            pesel:null,\n            age:null,\n            specialisation:null,\n\n            \n        }\n    }\n\n    componentDidMount(){\n        if(window.response!==undefined){\n            if (window.response.roles[0]===\"PATIENT\"){\n                getInfoAboutLoggedPatient.getInfo().then((response)=>{\n                    this.setState({id:response.data.id,\n                        name:response.data.firstName,\n                        surname:response.data.lastName,\n                        dob:response.data.dob,\n                        pesel:response.data.pesel,\n                        age:response.data.age,\n                        })\n                });\n            }\n            if(window.response.roles[0]===\"DOCTOR\"){\n                console.log(\"wykonano dla doktora\")\n                getInfoAboutLoggedDoctor.getInfo().then((response)=>{\n                    this.setState({id:response.data.id,\n                        name:response.data.firstName,\n                        surname:response.data.lastName,\n                        specialisation:response.data.specialisation,\n                        })\n                });\n            }\n            \n\n    }}\n    handlePressedButton(){\n        window.response=undefined;\n        alert(\"Wylogowano pomyślnie\");\n    }\n    render(){\n        if(window.response===undefined){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n        return(\n            \n            <div className=\"container my-md-5\">\n                \n                <div className=\"row\">\n                    <div className=\"col-md text-md-end m-auto p-2 p-md-5\">\n                        <i class=\"fas fa-user\"></i>\n                    </div>\n                    <div className=\"col-md-7 text-md-start m-auto py-3\">\n                        <section id=\"patient_information\">\n                            <h1>Informacje o koncie</h1>\n                            <ul>\n                                <li>Imie i Nazwisko: <span>{this.state.name + \" \" + this.state.surname}</span></li>\n                                <li>Pesel: <span>{this.state.pesel}</span></li>\n                                <li>Data urodzenia: <span>{this.state.dob}</span></li>\n                                <li>Wiek: <span>{this.state.age + \"lat\"}</span></li>\n                            </ul>\n                        </section>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-3 py-2\">\n                    <NavLink to='/appointments' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Moje wizyty</button></NavLink>\n                    </div>\n                    <div className=\"col-md-3 py-2 \">\n                    <NavLink to='/addAppointment' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Dodaj wizytę</button></NavLink>\n                    </div>\n                    <div className=\"col-md-3 py-2 \">\n                    <NavLink to='/' onClick={this.handlePressedButton} className=\"btn btn-outline-light btn-lg\">Wyloguj się</NavLink>\n                    </div>\n                </div>\n            </div>\n            // </div>\n            \n            )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n            \n                <div className=\"container my-md-5\">\n                    {/* {window.response===undefined?<Redirect to='/'/>:null} */}\n                    <div className=\"row\">\n                        <div className=\"col-md text-md-end m-auto p-2 p-md-5\">\n                            <i class=\"fas fa-user\"></i>\n                        </div>\n                        <div className=\"col-md-7 text-md-start m-auto py-3\">\n                            <section id=\"patient_information\">\n                                <h1>Informacje o koncie</h1>\n                                <ul>\n                                    <li>Imie i Nazwisko: <span>{this.state.name + \" \" + this.state.surname}</span></li>\n                                    <li>Specjalizacja: <span>{this.state.specialisation}</span></li>\n                                  \n                                </ul>\n                            </section>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                    <div class=\"row row-cols-2 row-cols-md-5 g-3 g-md-2\">\n                        <div className=\"col\">\n                        <NavLink to='/appointments' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Moje wizyty</button></NavLink>\n                        </div>\n                        <div className=\"col \">\n                        <NavLink to='/addAppointmentDoctor' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Dodaj wizytę</button></NavLink>\n                        </div>\n                        <div className=\"col \">\n                        <NavLink to='/deleteAppointmentDoctor' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Usuń wizytę</button></NavLink>\n                        </div>\n                        <div className=\"col \">\n                        <NavLink to='/changePassword' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Zmień hasło</button></NavLink>\n                        </div>\n                        <div className=\"col-md-3 py-2 \">\n                        <NavLink to='/' onClick={this.handlePressedButton} className=\"btn btn-outline-light btn-lg\">Wyloguj się</NavLink>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                // </div>\n                \n                )\n        }\n        if(window.response.roles[0]===\"ADMIN\"){\n            return(\n            \n                <div className=\"container my-md-5\">\n                    {/* {window.response===undefined?<Redirect to='/'/>:null} */}\n                    <div className=\"row\">\n                        <div className=\"col-md text-md-end m-auto p-2 p-md-5\">\n                            <i class=\"fas fa-user\"></i>\n                        </div>\n                        <div className=\"col-md-7 text-md-start m-auto py-3\">\n                            <section id=\"patient_information\">\n                                <h1>Informacje o koncie</h1>\n                                <p>Admin</p>\n                            </section>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-3 py-2\">\n                        </div>\n                        <div className=\"col-md-3 py-2 \">\n                        </div>\n                        <div className=\"col-md-3 py-2 \">\n                        <NavLink to='/registerDoctor' exact><button type=\"button\" className=\"btn btn-outline-light btn-lg\">Zarejestruj doktora</button></NavLink>\n                        </div>\n                        <div className=\"col-md-3 py-2 \">\n                        <NavLink to='/' onClick={this.handlePressedButton} className=\"btn btn-outline-light btn-lg\">Wyloguj się</NavLink>\n                        </div>\n                    </div>\n                </div>\n                // </div>\n                \n                )\n        }\n    }\n\n        \n}\n\n\nexport default MyProfile;","/home/michal/code/pap21l-z07/react_clinic/src/components/PatientRegisterComponent.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/DoctorRegisterComponent.js",["246","247","248","249","250","251","252","253"],"import React from 'react';\nimport props from 'prop-types';\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport specialisationService from '../services/specialistionService';\nimport axios from 'axios';\nclass DoctorRegisterComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n           specialisations:[],\n           choosenSpecialisation:'',\n           firstName:\"\",\n           lastName:\"\",\n           email:\"\",\n        }\n    }\n\n    componentDidMount(){\n     \n        specialisationService.getSpecialisation().then((response)=>{\n            this.setState({specialisations: response.data})\n        });\n    }\n    \n    handleSubmit=(event)=>{\n        event.preventDefault()\n\n        if(this.state.choosenSpecialisation===\"\"){\n            return alert('Wybierz specjalizację');\n        }\n\n\n        const USERTOKEN = window.response.accessToken;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`,\n                'Access-Control-Allow-Origin':'http://localhost:3000/'}\n            }\n\n            axios.post('http://localhost:8080/api/registration/registerDoctorAsAdmin', {\"firstName\":this.state.firstName,\n        \"lastName\":this.state.lastName,\n        \"email\":this.state.email,\n        \"doctorSpecialisation\":this.state.choosenSpecialisation})\n            .then(response =>{\n                console.log(response)\n                alert(\"Pomyślnie dodano doktora!\")\n                this.props.history.push('/myProfile')\n            })\n            .catch(error=>{\n                alert(\"Nie udało się dodać doktora!\")\n                this.props.history.push('/myProfile')\n\n                console.log(error)\n            })\n        \n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className = \"mt-5\">Rejestracja doktora</h1>\n                <div className=\"col-md-8 m-auto mt-3\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row form-group\">\n                    <label htmlFor=\"fname\" className=\"col-md-4 col-form-label text-md-end\">Imie</label>\n                    <div className=\"col-md-6 my-auto\">\n                    <input className=\"form-control\" value={this.state.firstName} onChange={(e)=>this.setState({firstName:e.target.value})} type=\"text\" id=\"fname\" name=\"fname\"/>\n                    </div>\n                    </div>\n                    <div className=\"row form-group\">\n                    <label htmlFor=\"lname\" className=\"col-md-4 col-form-label text-md-end\">Nazwisko</label>\n                    <div className=\"col-md-6 my-auto\">\n                    <input className=\"form-control\" value={this.state.lastName} onChange={(e)=>this.setState({lastName:e.target.value})} type=\"text\" id=\"lname\" name=\"lname\"/>\n                    </div>\n                    </div>\n                    <div className=\"row form-group\">\n\n                    <label htmlFor=\"fname\" className=\"col-md-4 col-form-label text-md-end\">Email:</label>\n                    <div className=\"col-md-6 my-auto\">\n                    <input className=\"form-control\" value={this.state.email} onChange={(e)=>this.setState({email:e.target.value})} type=\"email\" id=\"email\" name=\"email\"/>\n                    </div>\n                    </div>\n                    <div className=\"row form-group\">\n                    <label className=\"col-md-4 col-form-label text-md-end\" for=\"specialisations\">Specjalizacja:</label>\n                    <div className=\"col-md-6 my-auto\">\n                    <select className=\"form-select\" name=\"specialisations\" id=\"specialisations\" onChange={(e)=>this.setState({choosenSpecialisation:e.target.value})}>\n                    <option value=\"\">Wybierz specializację</option>\n\n                       {this.state.specialisations.map((specialisation)=>{\n                           return(\n                               <>\n                                  <option value={specialisation}>{specialisation}</option>\n                               </>\n                           )\n                       })}\n                    </select>\n                    </div>\n                    </div>\n\n                    <button className=\"btn btn-outline-light btn-lg mt-3\" type=\"submit\">Zarejestruj</button>\n                </form>\n                </div>\n            </div>\n        )\n        \n    }\n\n        \n}\n\n\nexport default DoctorRegisterComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/doctorProfile.js",["254","255","256","257","258","259"],"import React from 'react';\nimport props from 'prop-types';\nimport {useHistory} from \"react-router-dom\";\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport PatientService from '../services/PatientService';\n\nclass MyProfile extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            //do wpisania tutaj jak bedzie logowanie\n            id:21,\n            name:\"Marek\",\n            surname:\"Sowa\",\n            dob:\"2000-02-02\",\n            pesel:\"11223344569\",\n            age:15,\n\n            \n        }\n    }\n\n    render(){\n        return(\n            <>\n            <nav>\n       \n                    <ul className=\"\">\n\n                        <li ><NavLink to='/appointments' exact>Moje wizyty</NavLink></li>\n                        <li ><NavLink to='/addAppointmentDoctor' exact>Dodaj wizytę</NavLink></li>\n                    </ul>\n            </nav>\n            <section id=\"patient_information\">\n            <h1>Informacje o koncie</h1>\n            <ul>\n                <li>Imie i Nazwisko:{this.state.name + \" \" + this.state.surname}</li>\n                <li>Pesel: {this.state.pesel}</li>\n                <li>Data urodzenia:{this.state.dob}</li>\n                <li>Wiek:{this.state.age + \"lat\"}</li>\n\n            </ul>\n            <NavLink to=\"/addAppointmentDoctor\">Dodaj wizytę pacjentowi</NavLink>\n            </section>\n\n            </>\n        )\n        }\n\n}\n\n\nexport default MyProfile;","/home/michal/code/pap21l-z07/react_clinic/src/components/DeleteAppointmentPatient.js",["260","261","262"],"\n\nimport React, { Component } from 'react';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorService from '../services/DoctorService';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport AppointmentService from '../services/AppointmentService';\nclass DeleteAppointmentPatient extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            appointments:[],\n            choosenAppoitmentId:0,\n        }\n\n    }\n    submitButtonClicked = (event)=>{\n        var USERTOKEN = window.response.accessToken;\n        URL = \"http://localhost:8080/api/appointment/delete/\"+this.state.choosenAppoitmentId;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n\n        var appointmentDate=null;\n        var docId=0;\n        this.state.appointments.map((appointment)=>{\n            if (appointment.id.toString()===this.state.choosenAppoitmentId.toString()){\n                appointmentDate=appointment.date;\n                docId=appointment.doctorId.toString();\n            }\n        })\n        axios.delete(URL,config).then((response)=>{\n\n            alert(\"Usunięto wizytę\");\n            var date = appointmentDate.toString();\n        var year = parseInt(date.slice(0,4))\n        var month = parseInt(date.slice(5,7))\n        var day = parseInt(date.slice(8,10))\n        var hour = parseInt(date.slice(11,13))\n        var minute = parseInt(date.slice(14,16))\n\n        axios.post('http://localhost:8080/api/appointment/registerNewAppointment', {\n        \"doctorId\": docId.toString(),\n        \"date\": [year, month, day, hour, minute]\n    }, config)\n        .then(response =>{\n            console.log(response)\n            this.props.history.push(`/myProfile`);\n\n        })\n        .catch(error=>{\n            console.log(error)\n            this.props.history.push(`/myProfile`);\n\n        })\n    \n        this.props.history.push(`/myProfile`);\n            \n        }).catch(error=>{\n\n                    alert(\"Nie udało się usunąć wizyty!\")\n                    console.log(error)\n         \n                });\n        this.props.history.push(`/myProfile`)\n\n        \n\n    }\n    componentDidMount(){\n\n        MyAppointmentsService.getMyAppointments().then((response)=>{\n            this.setState({myAppointments: response.data})\n        });\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        }\n\n\n    \n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1 className=\"my-4\">Usuń wizytę</h1>\n            <form method=\"post\" id=\"deleteAppointment\" onSubmit={this.submitButtonClicked}>\n            <div className=\"row justify-content-center my-4 mx-1\">\n                <div className=\"col-10 col-md-5\">\n                    \n                <select className=\"form-select text-center\" value={this.state.choosenAppoitmentData} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitmentId:e.target.value})}>\n                    <option value={null}>-----Wybierz Termin-----</option>\n                        {this.state.myAppointments.map(appointment=>{\n          \n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option className=\"text-center\" key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )}\n                    )}\n                    </select>\n                    </div>\n                    <div className=\"col-2 text-start\">\n                    \n                    <button type=\"submit\" className=\"btn btn-outline-danger\"><i class=\"fa fa-trash btn-outline-danger\" aria-hidden=\"true\"></i></button>\n                    </div>\n            </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default DeleteAppointmentPatient","/home/michal/code/pap21l-z07/react_clinic/src/components/DeleteAppointmentDoctor.js",["263","264","265","266","267","268","269","270","271"],"\n\nimport React, { Component } from 'react';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorService from '../services/DoctorService';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nclass DeleteAppointmentPatient extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            appointments:[],\n            choosenAppoitmentId:0,\n        }\n\n    }\n    submitButtonClicked = (event)=>{\n        var USERTOKEN = window.response.accessToken;\n        URL = \"http://localhost:8080/api/appointment/delete/\"+this.state.choosenAppoitmentId;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n\n        var appointmentDate=null;\n        var docId=0;\n        this.state.appointments.map((appointment)=>{\n            if (appointment.id.toString()===this.state.choosenAppoitmentId.toString()){\n                appointmentDate=appointment.date;\n                docId=appointment.doctorId.toString();\n            }\n        })\n        axios.delete(URL,config).then((response)=>{\n            alert(\"Usunięto wizytę\");\n        }).catch(error=>{\n\n                    alert(\"Nie udało się usunąć wizyty!\")\n                    console.log(error)\n         \n                });\n        this.props.history.push(`/addAppointmentDoctor`)\n\n        \n\n    }\n    componentDidMount(){\n\n        DoctorAppointmentService.getAppointments().then((response)=>{\n            this.setState({myAppointments: response.data})\n        });\n        }\n\n\n    \n\n    render(){\n        return(\n            <>\n                <div className=\"container\">\n                <h1 className=\"my-4\">Usuń wizytę</h1>\n            <form method=\"post\" id=\"deleteAppointment\" onSubmit={this.submitButtonClicked}>\n            <div className=\"row justify-content-center my-4 mx-1\">\n                <div className=\"col-10 col-md-5\">\n                <select className=\"form-select text-center\"value={this.state.choosenAppoitmentData} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitmentId:e.target.value})}>\n                    <option value={null}>-----Wybierz Termin-----</option>\n                        {this.state.myAppointments.map(appointment=>{\n                            if(appointment.patientId===null){\n\n                           \n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option className=\"text-center\" key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )} }\n                               \n\n                          \n                    )}\n                    </select>\n                    </div>\n                    <div className=\"col-2 text-start\">\n                    \n                    <button type=\"submit\" className=\"btn btn-outline-danger\"><i class=\"fa fa-trash btn-outline-danger\" aria-hidden=\"true\"></i></button>\n                    </div>\n            </div>\n            </form>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default DeleteAppointmentPatient","/home/michal/code/pap21l-z07/react_clinic/src/components/ChangePasswordComponent.js",["272","273"],"import React from 'react';\nimport props from 'prop-types';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nclass ChangePasswordComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            currentPassword:'',\n            newPassword:'',\n            \n        }\n    }\n    \n\n\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n\n        axios.post('http://localhost:8080/api/auth/changePassword', {\"password\":this.state.currentPassword, \"newPassword\":this.state.newPassword})\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie zmieniono hasło!\")\n        })\n        .catch(error=>{\n            alert(\"Nie udało się zmienić hasła!\")\n            console.log(error)\n        })\n    }\n    render(){\n        return(\n\n                <>\n                <div className=\"container\">\n                <div className=\"col-md-8 m-auto mt-3\">\n                    <form onSubmit={this.handlePressedButton}>\n                        <h1>Zmiana hasła</h1>                 \n        \n                        <div className=\"row form-group\">\n                            <label for=\"password\" className=\"col-md-4 col-form-label text-md-end\">Aktualne hasło:</label>\n                            <div className=\"col-md-6 my-auto\">\n                                <input className=\"form-control\" value={this.state.currentPassword} onChange={(e)=>this.setState({currentPassword:e.target.value})} type=\"password\" id=\"password\" name=\"password\" />\n                            </div>\n                        </div>\n                            \n                        <div className=\"row form-group mb-3\">\n                        \n                            <label for=\"newPassword\" className=\"col-md-4 col-form-label text-md-end\">Nowe hasło:</label>\n                        \n                            <div className=\"col-md-6 my-auto\">\n                                <input className=\"form-control\" value={this.state.newPassword} onChange={(e)=>this.setState({newPassword:e.target.value})} type=\"password\" id=\"newPassword\" name=\"newPassword\" />\n                            </div>\n                        </div>\n                            \n                        <button className=\"btn btn-outline-light btn-lg\" type=\"submit\" >Zmień hasło</button>\n                    </form>\n                </div>\n                    \n                \n            </div>\n                </>\n                \n        )\n    }\n}\n\nexport default ChangePasswordComponent;","/home/michal/code/pap21l-z07/react_clinic/src/components/Navbar.js",["274"],"import React from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport './Navbar.css'\n\nfunction Navi() {\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark p-0\">\n        <div class=\"container-fluid\">\n            <NavLink to=\"/\" className=\"navbar-brand\" id=\"brand\">Clinic</NavLink>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div class=\"navbar-nav ms-auto\">\n                <NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\n                <NavLink to=\"/singup\" className=\"nav-link\">Sing Up</NavLink>\n            </div>\n            </div>\n        </div>\n        </nav>\n    )\n}\n\nexport default Navi;","/home/michal/code/pap21l-z07/react_clinic/src/components/context/context.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/AuthenticatedRoute.jsx",[],"/home/michal/code/pap21l-z07/react_clinic/src/Input.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/services/AppointmentService.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/services/MyAppointmentsService.js",["275","276"],"import axios from 'axios';\nimport LoginComponent from '../components/ANOTHERLoginComponent';\nimport context from '../components/context/context';\nconst MY_APPOINTMENTS_URL = 'http://localhost:8080/api/patient/getAppointmentsOfLoggedPatient';\n\nclass MyAppointmentsService{\n\n    getMyAppointments(){\n        var USERTOKEN = window.response.accessToken;\n\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n        return axios.get(MY_APPOINTMENTS_URL, config);\n        \n    }\n}\n\nexport default new MyAppointmentsService();","/home/michal/code/pap21l-z07/react_clinic/src/services/DoctorAppointmentService.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/services/PatientService.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/CreatePatient.js",["277","278"],"import React from 'react';\nimport DoctorService from '../services/DoctorService';\nimport props from 'prop-types';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nclass CreatePatient extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            patient_dob:null,\n            patient_firstName:null,\n            patient_lastName:null,\n            patient_pesel:null,\n            patient_age:null,\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        \n    }\n    handlePressedButton = (event) =>{\n        alert(this.state.patient_dob)\n        event.preventDefault()\n\n        axios.post('http://localhost:8080/api/patient/registerNewPatient', {\"firstName\":this.state.patient_firstName, \"lastName\":this.state.patient_lastName, \"dob\":this.state.patient_dob, \"pesel\":this.state.patient_pesel, \"appUserId\":\"null\"})\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie dodano pacjenta!\")\n        })\n        .catch(error=>{\n            alert(\"Nie udało się dodać pacjenta!\")\n            console.log(error)\n        })\n    }\n    render(){\n        return(\n\n            <div>\n                <form  method=\"post\" id=\"appointment_form\" onSubmit={this.handlePressedButton}>\n                    \n                    <label htmlFor=\"firstName\">Imie pacjenta</label>\n                    <input value={this.state.patient_firstName} onChange={e=>this.setState({patient_firstName:e.target.value})} type=\"text\" id=\"firstName\" name=\"firstName\"/>\n                    <br></br>\n                    <label htmlFor=\"lastName\">Nazwisko pacjenta</label>\n                    <input value={this.state.patient_lastName} onChange={e=>this.setState({patient_lastName:e.target.value})} type=\"text\" id=\"lastName\" name=\"lastName\"/>\n                    <br></br>\n\n                    <label htmlFor=\"pesel\">Pesel pacjenta</label>\n                    <input value={this.state.patient_pesel} onChange={e=>this.setState({patient_pesel:e.target.value})} type=\"text\" id=\"pesel\" name=\"pesel\"/>\n                    <br></br>\n\n\n                    <label htmlFor=\"birthday\">Data urodzenia:</label>\n                    <input type=\"date\" id=\"birthday\" name=\"birthday\" value={this.state.patient_dob} onChange={e=>this.setState({patient_dob:e.target.value})}/>\n                    <br></br>\n\n\n\n                    <button type='submit'>Dodaj pacjenta</button>\n                    \n                </form>\n               \n            </div>\n                \n        )\n    }\n}\n\nexport default CreatePatient;","/home/michal/code/pap21l-z07/react_clinic/src/services/getInfoAboutLoggedDoctor.js",["279","280"],"import axios from 'axios';\nimport LoginComponent from '../components/ANOTHERLoginComponent';\nimport context from '../components/context/context';\nconst DOCTOR_INFO_URL = 'http://localhost:8080/api/doctor/getInfoAboutLoggedDoctor';\n\nclass getInfoAboutLoggedDoctor{\n\n    getInfo(){\n        var USERTOKEN = window.response.accessToken;\n\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n        return axios.get(DOCTOR_INFO_URL, config);\n        \n    }\n}\n\nexport default new getInfoAboutLoggedDoctor();","/home/michal/code/pap21l-z07/react_clinic/src/services/specialistionService.js",[],"/home/michal/code/pap21l-z07/react_clinic/src/components/RegistrationForm.js",["281","282","283"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport axios from 'axios';\nimport { NavLink, Redirect } from 'react-router-dom';\nclass RegistrationForm extends Component {\n\n    constructor(props) {\n        super(props)\n        if(props.error) {\n            this.state = {\n              failure: 'wrong username,email or password!',\n              errcount: 0\n            }\n        } else {\n            this.state = { errcount: 0 }\n        }\n    }\n    handleSubmit = (event) =>{\n        event.preventDefault()\n        const data = new FormData(this.form)\n        axios.post('http://localhost:8080/api/registration/patient', {'firstName':data.get('firstName'),\n        'lastName':data.get('lastName'),\n        'email':data.get('email'),\n        'password':data.get('password'),\n        'pesel':data.get('pesel'),\n        'dob':data.get('dob')})\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie zarejestrowano! Aby korzystać ze wszystkich usług potwierdź maila\");\n            <Redirect path='/' />;\n        })\n        .catch(error=>{\n            alert(\"Nie udało się zarejestrować!\")\n            console.log(error)\n        })\n    }\n\n\n\n    handleError = (field, errmsg) => {\n        if(!field) return\n\n        if(errmsg) {\n            this.setState((prevState) => ({\n                failure: '',\n                errcount: prevState.errcount + 1, \n                errmsgs: {...prevState.errmsgs, [field]: errmsg}\n            }))\n        } else {\n            this.setState((prevState) => ({\n                failure: '',\n                errcount: prevState.errcount===1? 0 : prevState.errcount-1,\n                errmsgs: {...prevState.errmsgs, [field]: ''}\n            }))\n        }\n    }\n\n    renderError = () => {\n        if(this.state.errcount || this.state.failure) {\n            const errmsg = this.state.failure \n              || Object.values(this.state.errmsgs).find(v=>v)\n            return <div className=\"error\">{errmsg}</div>\n        }\n    }\n\n    render() {\n        const inputs = this.props.inputs.map(\n          ({name, placeholder, type, value, className}, index) => (<div className=\"mb-2\">\n              <div className=\"row form-group\">\n            <label className=\"col-md-4 col-form-label text-md-end\">{name}</label>\n            <div className=\"col-md-6 my-auto\">\n            <Input className=\"form-control\" key={index} name={name} placeholder={placeholder} type={type} value={value}\n              className={type==='submit'? className : ''} className=\"form-control\" handleError={this.handleError} />\n         </div>\n         </div>\n         </div>\n          )\n        )\n        const errors = this.renderError()\n        return (\n            <div className=\"container my-2\">\n                <h1>Rejestracja</h1>\n                <div className=\"col-md-8 m-auto mt-3\">\n            <form {...this.props} onSubmit={this.handleSubmit} ref={fm => {this.form=fm}} >\n              {inputs}\n              {errors}\n            </form>\n            </div>\n            </div>\n        )\n    }\n}\n\nRegistrationForm.propTypes = {\n  name: PropTypes.string,\n  action: PropTypes.string,\n  method: PropTypes.string,\n  inputs: PropTypes.array,\n  error: PropTypes.string\n}\n\nexport default RegistrationForm","/home/michal/code/pap21l-z07/react_clinic/src/services/getInfoAboutLoggedPatient.js",["284","285"],"import axios from 'axios';\nimport LoginComponent from '../components/ANOTHERLoginComponent';\nimport context from '../components/context/context';\nconst PATIENT_INFO_URL = 'http://localhost:8080/api/patient/getInfoAboutLoggedPatient';\n\nclass getInfoAboutLoggedPatient{\n\n    getInfo(){\n        var USERTOKEN = window.response.accessToken;\n\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n        return axios.get(PATIENT_INFO_URL, config);\n        \n    }\n}\n\nexport default new getInfoAboutLoggedPatient();",{"ruleId":"286","severity":1,"message":"287","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":12},{"ruleId":"286","severity":1,"message":"290","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"291","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":22},{"ruleId":"286","severity":1,"message":"292","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":27},{"ruleId":"286","severity":1,"message":"293","line":11,"column":8,"nodeType":"288","messageId":"289","endLine":11,"endColumn":17},{"ruleId":"286","severity":1,"message":"294","line":40,"column":12,"nodeType":"288","messageId":"289","endLine":40,"endColumn":23},{"ruleId":"286","severity":1,"message":"295","line":40,"column":25,"nodeType":"288","messageId":"289","endLine":40,"endColumn":43},{"ruleId":"286","severity":1,"message":"296","line":40,"column":45,"nodeType":"288","messageId":"289","endLine":40,"endColumn":59},{"ruleId":"286","severity":1,"message":"297","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":19},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"291","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":22},{"ruleId":"286","severity":1,"message":"299","line":6,"column":31,"nodeType":"288","messageId":"289","endLine":6,"endColumn":38},{"ruleId":"286","severity":1,"message":"300","line":6,"column":48,"nodeType":"288","messageId":"289","endLine":6,"endColumn":56},{"ruleId":"286","severity":1,"message":"301","line":12,"column":8,"nodeType":"288","messageId":"289","endLine":12,"endColumn":29},{"ruleId":"286","severity":1,"message":"302","line":18,"column":8,"nodeType":"288","messageId":"289","endLine":18,"endColumn":12},{"ruleId":"286","severity":1,"message":"303","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"304","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"305","line":3,"column":25,"nodeType":"288","messageId":"289","endLine":3,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":3,"column":40,"nodeType":"288","messageId":"289","endLine":3,"endColumn":46},{"ruleId":"286","severity":1,"message":"307","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"291","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":22},{"ruleId":"286","severity":1,"message":"307","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"308","line":4,"column":7,"nodeType":"288","messageId":"289","endLine":4,"endColumn":15},{"ruleId":"286","severity":1,"message":"309","line":6,"column":7,"nodeType":"288","messageId":"289","endLine":6,"endColumn":27},{"ruleId":"286","severity":1,"message":"310","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":17},{"ruleId":"286","severity":1,"message":"311","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"312","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":13},{"ruleId":"286","severity":1,"message":"300","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":18},{"ruleId":"286","severity":1,"message":"298","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":20},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":19},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":19},{"ruleId":"286","severity":1,"message":"313","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":26},{"ruleId":"286","severity":1,"message":"314","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":22},{"ruleId":"286","severity":1,"message":"304","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":23},{"ruleId":"286","severity":1,"message":"305","line":7,"column":25,"nodeType":"288","messageId":"289","endLine":7,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":7,"column":40,"nodeType":"288","messageId":"289","endLine":7,"endColumn":46},{"ruleId":"286","severity":1,"message":"315","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":24},{"ruleId":"286","severity":1,"message":"316","line":72,"column":45,"nodeType":"288","messageId":"289","endLine":72,"endColumn":50},{"ruleId":"317","severity":1,"message":"318","line":113,"column":32,"nodeType":"319","messageId":"320","endLine":113,"endColumn":34},{"ruleId":"317","severity":1,"message":"318","line":139,"column":32,"nodeType":"319","messageId":"320","endLine":139,"endColumn":34},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":18,"nodeType":"288","messageId":"289","endLine":3,"endColumn":28},{"ruleId":"286","severity":1,"message":"321","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":7,"column":9,"nodeType":"288","messageId":"289","endLine":7,"endColumn":19},{"ruleId":"286","severity":1,"message":"322","line":55,"column":13,"nodeType":"288","messageId":"289","endLine":55,"endColumn":19},{"ruleId":"286","severity":1,"message":"323","line":96,"column":13,"nodeType":"288","messageId":"289","endLine":96,"endColumn":15},{"ruleId":"286","severity":1,"message":"324","line":97,"column":13,"nodeType":"288","messageId":"289","endLine":97,"endColumn":15},{"ruleId":"286","severity":1,"message":"325","line":98,"column":13,"nodeType":"288","messageId":"289","endLine":98,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":153,"column":65,"nodeType":"319","messageId":"320","endLine":153,"endColumn":67},{"ruleId":"286","severity":1,"message":"321","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"326","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":21},{"ruleId":"317","severity":1,"message":"327","line":62,"column":34,"nodeType":"319","messageId":"328","endLine":62,"endColumn":36},{"ruleId":"286","severity":1,"message":"323","line":121,"column":13,"nodeType":"288","messageId":"289","endLine":121,"endColumn":15},{"ruleId":"286","severity":1,"message":"324","line":122,"column":13,"nodeType":"288","messageId":"289","endLine":122,"endColumn":15},{"ruleId":"286","severity":1,"message":"325","line":123,"column":13,"nodeType":"288","messageId":"289","endLine":123,"endColumn":17},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":19,"nodeType":"288","messageId":"289","endLine":3,"endColumn":29},{"ruleId":"286","severity":1,"message":"304","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":23},{"ruleId":"286","severity":1,"message":"305","line":4,"column":25,"nodeType":"288","messageId":"289","endLine":4,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":4,"column":40,"nodeType":"288","messageId":"289","endLine":4,"endColumn":46},{"ruleId":"286","severity":1,"message":"329","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":22},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"300","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":17},{"ruleId":"286","severity":1,"message":"298","line":3,"column":19,"nodeType":"288","messageId":"289","endLine":3,"endColumn":29},{"ruleId":"286","severity":1,"message":"304","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":23},{"ruleId":"286","severity":1,"message":"305","line":4,"column":25,"nodeType":"288","messageId":"289","endLine":4,"endColumn":30},{"ruleId":"286","severity":1,"message":"299","line":4,"column":31,"nodeType":"288","messageId":"289","endLine":4,"endColumn":38},{"ruleId":"286","severity":1,"message":"306","line":4,"column":40,"nodeType":"288","messageId":"289","endLine":4,"endColumn":46},{"ruleId":"286","severity":1,"message":"322","line":35,"column":13,"nodeType":"288","messageId":"289","endLine":35,"endColumn":19},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":19},{"ruleId":"286","severity":1,"message":"304","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":23},{"ruleId":"286","severity":1,"message":"305","line":4,"column":25,"nodeType":"288","messageId":"289","endLine":4,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":4,"column":40,"nodeType":"288","messageId":"289","endLine":4,"endColumn":46},{"ruleId":"286","severity":1,"message":"329","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":22},{"ruleId":"286","severity":1,"message":"300","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":18},{"ruleId":"330","severity":1,"message":"331","line":24,"column":9,"nodeType":"288","messageId":"332","endLine":24,"endColumn":12},{"ruleId":"317","severity":1,"message":"327","line":34,"column":50,"nodeType":"319","messageId":"328","endLine":34,"endColumn":52},{"ruleId":"286","severity":1,"message":"333","line":4,"column":8,"nodeType":"288","messageId":"289","endLine":4,"endColumn":29},{"ruleId":"286","severity":1,"message":"334","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":21},{"ruleId":"286","severity":1,"message":"300","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":18},{"ruleId":"286","severity":1,"message":"313","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":26},{"ruleId":"330","severity":1,"message":"331","line":25,"column":9,"nodeType":"288","messageId":"332","endLine":25,"endColumn":12},{"ruleId":"317","severity":1,"message":"327","line":35,"column":50,"nodeType":"319","messageId":"328","endLine":35,"endColumn":52},{"ruleId":"286","severity":1,"message":"335","line":37,"column":17,"nodeType":"288","messageId":"289","endLine":37,"endColumn":32},{"ruleId":"286","severity":1,"message":"316","line":38,"column":17,"nodeType":"288","messageId":"289","endLine":38,"endColumn":22},{"ruleId":"317","severity":1,"message":"318","line":74,"column":67,"nodeType":"319","messageId":"320","endLine":74,"endColumn":69},{"ruleId":"286","severity":1,"message":"297","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":3,"column":9,"nodeType":"288","messageId":"289","endLine":3,"endColumn":19},{"ruleId":"286","severity":1,"message":"336","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":14},{"ruleId":"286","severity":1,"message":"291","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":22},{"ruleId":"286","severity":1,"message":"307","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"297","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"298","line":4,"column":9,"nodeType":"288","messageId":"289","endLine":4,"endColumn":19},{"ruleId":"286","severity":1,"message":"291","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":22},{"ruleId":"286","severity":1,"message":"307","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"286","severity":1,"message":"299","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":17},{"ruleId":"337","severity":1,"message":"338","line":74,"column":15,"nodeType":"339","messageId":"340","endLine":74,"endColumn":58},{"ruleId":"337","severity":1,"message":"338","line":74,"column":59,"nodeType":"339","messageId":"340","endLine":74,"endColumn":83},{"ruleId":"286","severity":1,"message":"291","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":22},{"ruleId":"286","severity":1,"message":"307","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DoctorComponent' is defined but never used.","'LoginComponent' is defined but never used.","'NavigationComponent' is defined but never used.","'USERTOKEN' is defined but never used.","'currentUser' is assigned a value but never used.","'showModeratorBoard' is assigned a value but never used.","'showAdminBoard' is assigned a value but never used.","'props' is defined but never used.","'useHistory' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'AuthenticationService' is defined but never used.","'Navi' is defined but never used.","'Component' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'context' is defined but never used.","'PASSWORD' is assigned a value but never used.","'DOCTORS_REST_API_URL' is assigned a value but never used.","'PropTypes' is defined but never used.","'Input' is defined but never used.","'axios' is defined but never used.","'AppointmentService' is defined but never used.","'AddAppointment' is defined but never used.","'ContactComponent' is defined but never used.","'docId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'config' is assigned a value but never used.","'dd' is assigned a value but never used.","'mm' is assigned a value but never used.","'yyyy' is assigned a value but never used.","'CreatePatient' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'PatientService' is defined but never used.","no-native-reassign","Read-only global 'URL' should not be modified.","nativeReassign","'MyAppointmentsService' is defined but never used.","'DoctorService' is defined but never used.","'appointmentDate' is assigned a value but never used.","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]