{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/DeleteAppointmentPatient.js\";\nimport React, { Component } from 'react';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorService from '../services/DoctorService';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport AppointmentService from '../services/AppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DeleteAppointmentPatient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitButtonClicked = event => {\n      var USERTOKEN = window.response.accessToken;\n      URL = \"http://localhost:8080/api/appointment/delete/\" + this.state.choosenAppoitmentId;\n      let config = {\n        headers: {\n          'Authorization': `Bearer ${USERTOKEN}`\n        }\n      };\n      axios.defaults.headers.common = {\n        'Authorization': `Bearer ${USERTOKEN}`\n      };\n      var appointmentDate = null;\n      var docId = 0;\n      this.state.appointments.map(appointment => {\n        if (appointment.id.toString() === this.state.choosenAppoitmentId.toString()) {\n          appointmentDate = appointment.date;\n          docId = appointment.doctorId.toString();\n        }\n      });\n      axios.delete(URL, config).then(response => {\n        alert(\"usunieto\");\n      }).catch(error => {\n        alert(\"Nie udało się usunąć wizyty!\");\n        console.log(error);\n      });\n      var date = appointmentDate.toString();\n      var year = date.slice(0, 4);\n      var month = date.slice(5, 7);\n      var day = date.slice(8, 10);\n      var hour = date.slice(11, 13);\n      var minute = date.slice(14, 16);\n      alert(month);\n      alert(day);\n      alert(hour);\n      alert(minute);\n      alert(docId);\n      axios.post('http://localhost:8080/api/appointment/registerNewAppointment', {\n        \"doctorId\": docId.toString(),\n        \"date\": [year, month, day, hour, minute]\n      }, config).then(response => {\n        console.log(response);\n        alert(\"Pomyślnie dodano wizytę!\");\n        this.props.history.push(`/myProfile`);\n      }).catch(error => {\n        alert(\"Nie udało się dodać wizyty!\");\n        console.log(error);\n        this.props.history.push(`/myProfile`);\n      });\n    };\n\n    this.state = {\n      myAppointments: [],\n      doctors: [],\n      appointments: [],\n      choosenAppoitmentId: 0\n    };\n  }\n\n  componentDidMount() {\n    MyAppointmentsService.getMyAppointments().then(response => {\n      this.setState({\n        myAppointments: response.data\n      });\n      alert(this.state.myAppointments);\n    });\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        id: \"deleteAppointment\",\n        onSubmit: this.submitButtonClicked,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.choosenAppoitmentData,\n          name: \"appointments\",\n          id: \"appointments\",\n          onChange: e => this.setState({\n            choosenAppoitmentId: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"-----Wybierz Termin-----\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), this.state.myAppointments.map(appointment => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: appointment.id,\n                children: appointment.date\n              }, appointment.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default DeleteAppointmentPatient;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/DeleteAppointmentPatient.js"],"names":["React","Component","MyAppointmentsService","DoctorService","axios","Redirect","AppointmentService","DeleteAppointmentPatient","constructor","props","submitButtonClicked","event","USERTOKEN","window","response","accessToken","URL","state","choosenAppoitmentId","config","headers","defaults","common","appointmentDate","docId","appointments","map","appointment","id","toString","date","doctorId","delete","then","alert","catch","error","console","log","year","slice","month","day","hour","minute","post","history","push","myAppointments","doctors","componentDidMount","getMyAppointments","setState","data","getDoctors","getAppointments","render","choosenAppoitmentData","e","target","value"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorService from '../services/DoctorService';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport AppointmentService from '../services/AppointmentService';\nclass DeleteAppointmentPatient extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            appointments:[],\n            choosenAppoitmentId:0,\n        }\n\n    }\n    submitButtonClicked = (event)=>{\n        var USERTOKEN = window.response.accessToken;\n        URL = \"http://localhost:8080/api/appointment/delete/\"+this.state.choosenAppoitmentId;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`}\n            };\n\n        axios.defaults.headers.common = {'Authorization': `Bearer ${USERTOKEN}`}\n\n        var appointmentDate=null;\n        var docId=0;\n        this.state.appointments.map((appointment)=>{\n            if (appointment.id.toString()===this.state.choosenAppoitmentId.toString()){\n                appointmentDate=appointment.date;\n                docId=appointment.doctorId.toString();\n            }\n        })\n        axios.delete(URL,config).then((response)=>{\n\n            alert(\"usunieto\");\n        }).catch(error=>{\n\n                    alert(\"Nie udało się usunąć wizyty!\")\n                    console.log(error)\n        \n                });\n        \n\n        var date = appointmentDate.toString();\n        var year = date.slice(0,4)\n        var month = date.slice(5,7)\n        var day = date.slice(8,10)\n        var hour = date.slice(11,13)\n        var minute = date.slice(14,16)\n\n        alert(month);\n        alert(day);\n        alert(hour);\n        alert(minute);\n        alert(docId);\n\n\n\n        axios.post('http://localhost:8080/api/appointment/registerNewAppointment', {\n        \"doctorId\": docId.toString(),\n        \"date\": [year, month, day, hour, minute]\n    }, config)\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie dodano wizytę!\")\n            this.props.history.push(`/myProfile`);\n\n        })\n        .catch(error=>{\n            alert(\"Nie udało się dodać wizyty!\")\n            console.log(error)\n            this.props.history.push(`/myProfile`);\n\n        })\n    \n\n    }\n    componentDidMount(){\n\n        MyAppointmentsService.getMyAppointments().then((response)=>{\n            this.setState({myAppointments: response.data})\n            alert(this.state.myAppointments)\n        });\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        }\n\n\n    \n\n    render(){\n        return(\n            <>\n            <form method=\"post\" id=\"deleteAppointment\" onSubmit={this.submitButtonClicked}>\n                <select value={this.state.choosenAppoitmentData} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitmentId:e.target.value})}>\n                    <option value={null}>-----Wybierz Termin-----</option>\n                        {this.state.myAppointments.map(appointment=>{\n          \n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )}\n                    )}\n                    </select>\n                    <button type=\"submit\"></button>\n            </form>\n            </>\n        )\n    }\n}\n\nexport default DeleteAppointmentPatient"]},"metadata":{},"sourceType":"module"}