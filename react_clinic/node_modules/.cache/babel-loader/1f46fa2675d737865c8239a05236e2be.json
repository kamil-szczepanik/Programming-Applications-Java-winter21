{"ast":null,"code":"import axios from 'axios';\nconst INSTRUCTOR = 'in28minutes';\nconst PASSWORD = 'dummy';\nconst COURSE_API_URL = 'http://localhost:8080';\nconst DOCTORS_REST_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`;\n\nclass AuthenticationService {\n  executeBasicAuthenticationService(username, password) {\n    return axios.get(`${DOCTORS_REST_API_URL}/basicauth`, {\n      headers: {\n        authorization: this.createBasicAuthToken(username, password)\n      }\n    });\n  }\n\n  createBasicAuthToken(username, password) {\n    return 'Basic ' + window.btoa(username + \":\" + password);\n  }\n\n  registerSuccessfulLogin(username, password) {\n    //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n    //console.log('registerSuccessfulLogin')\n    sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n    this.setupAxiosInterceptors(this.createBasicAuthToken(username, password));\n  }\n\n  setupAxiosInterceptors(token) {\n    axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        config.headers.authorization = token;\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/services/AuthenticationService.js"],"names":["axios","INSTRUCTOR","PASSWORD","COURSE_API_URL","DOCTORS_REST_API_URL","AuthenticationService","executeBasicAuthenticationService","username","password","get","headers","authorization","createBasicAuthToken","window","btoa","registerSuccessfulLogin","sessionStorage","setItem","USER_NAME_SESSION_ATTRIBUTE_NAME","setupAxiosInterceptors","token","interceptors","request","use","config","isUserLoggedIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,aAAnB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AACA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,oBAAoB,GAAI,GAAED,cAAe,gBAAeF,UAAW,EAAzE;;AAEA,MAAMI,qBAAN,CAA4B;AAExBC,EAAAA,iCAAiC,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAClD,WAAOR,KAAK,CAACS,GAAN,CAAW,GAAEL,oBAAqB,YAAlC,EACH;AAAEM,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,KAAKC,oBAAL,CAA0BL,QAA1B,EAAoCC,QAApC;AAAjB;AAAX,KADG,CAAP;AAEH;;AAEDI,EAAAA,oBAAoB,CAACL,QAAD,EAAWC,QAAX,EAAqB;AACrC,WAAO,WAAWK,MAAM,CAACC,IAAP,CAAYP,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlB;AACH;;AACDO,EAAAA,uBAAuB,CAACR,QAAD,EAAWC,QAAX,EAAqB;AACxC;AACA;AACAQ,IAAAA,cAAc,CAACC,OAAf,CAAuBC,gCAAvB,EAAyDX,QAAzD;AACA,SAAKY,sBAAL,CAA4B,KAAKP,oBAAL,CAA0BL,QAA1B,EAAoCC,QAApC,CAA5B;AACH;;AAEDW,EAAAA,sBAAsB,CAACC,KAAD,EAAQ;AAC1BpB,IAAAA,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACR,UAAI,KAAKC,cAAL,EAAJ,EAA2B;AACvBD,QAAAA,MAAM,CAACd,OAAP,CAAeC,aAAf,GAA+BS,KAA/B;AACH;;AACD,aAAOI,MAAP;AACH,KANL;AAQH;;AA1BuB;;AA6B5B,eAAe,IAAInB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst INSTRUCTOR = 'in28minutes'\nconst PASSWORD = 'dummy'\nconst COURSE_API_URL = 'http://localhost:8080'\nconst DOCTORS_REST_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`\n\nclass AuthenticationService {\n\n    executeBasicAuthenticationService(username, password) {\n        return axios.get(`${DOCTORS_REST_API_URL}/basicauth`,\n            { headers: { authorization: this.createBasicAuthToken(username, password) } })\n    }\n\n    createBasicAuthToken(username, password) {\n        return 'Basic ' + window.btoa(username + \":\" + password)\n    }\n    registerSuccessfulLogin(username, password) {\n        //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n        //console.log('registerSuccessfulLogin')\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}