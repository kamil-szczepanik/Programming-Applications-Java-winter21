{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginComponent.js\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport LoginForm from '../components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  name: \"username\",\n  placeholder: \"username\",\n  type: \"text\"\n}, {\n  name: \"email\",\n  placeholder: \"email\",\n  type: \"text\"\n}, {\n  name: \"password\",\n  placeholder: \"password\",\n  type: \"email\"\n}, {\n  type: \"submit\",\n  value: \"Submit\",\n  className: \"btn\"\n}];\nconst props = {\n  name: 'loginForm',\n  method: 'POST',\n  action: '/perform_login',\n  inputs: inputs\n};\nconst params = new URLSearchParams(window.location.search);\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.email, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.email, this.state.password);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  } // render() {\n  //     return (\n  //         <div>\n  //             <h1>Login</h1>\n  //             <div className=\"container\">\n  //                 {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n  //                 {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n  //                 {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n  //                 {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n  //                 User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n  //                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n  //                 <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, { ...props,\n        error: params.get('error')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginComponent.js"],"names":["React","Component","AuthenticationService","LoginForm","inputs","name","placeholder","type","value","className","props","method","action","params","URLSearchParams","window","location","search","LoginComponent","constructor","state","username","email","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","executeBasicAuthenticationService","then","registerSuccessfulLogin","catch","render","get"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,IAAI,EAAE,UADM;AAEZC,EAAAA,WAAW,EAAE,UAFD;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAD,EAIX;AACAF,EAAAA,IAAI,EAAE,OADN;AAEAC,EAAAA,WAAW,EAAE,OAFb;AAGAC,EAAAA,IAAI,EAAE;AAHN,CAJW,EAQX;AACAF,EAAAA,IAAI,EAAE,UADN;AAEAC,EAAAA,WAAW,EAAE,UAFb;AAGAC,EAAAA,IAAI,EAAE;AAHN,CARW,EAYX;AACAA,EAAAA,IAAI,EAAE,QADN;AAEAC,EAAAA,KAAK,EAAE,QAFP;AAGAC,EAAAA,SAAS,EAAE;AAHX,CAZW,CAAf;AAkBA,MAAMC,KAAK,GAAG;AACVL,EAAAA,IAAI,EAAE,WADI;AAEVM,EAAAA,MAAM,EAAE,MAFE;AAGVC,EAAAA,MAAM,EAAE,gBAHE;AAIVR,EAAAA,MAAM,EAAEA;AAJE,CAAd;AAOA,MAAMS,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;;AACA,MAAMC,cAAN,SAA6BjB,SAA7B,CAAuC;AAEnCkB,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKU,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,cAAc,EAAE,KAJP;AAKTC,MAAAA,kBAAkB,EAAE;AALX,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI,OAACD,KAAK,CAACE,MAAN,CAAa1B,IAAd,GACMwB,KAAK,CAACE,MAAN,CAAavB;AAFvB,KADJ;AAMH;;AAEDoB,EAAAA,YAAY,GAAG;AAEZ1B,IAAAA,qBAAqB,CACf8B,iCADN,CACwC,KAAKZ,KAAL,CAAWC,QADnD,EAC4D,KAAKD,KAAL,CAAWE,KADvE,EAC8E,KAAKF,KAAL,CAAWG,QADzF,EAEMU,IAFN,CAEW,MAAM;AACR/B,MAAAA,qBAAqB,CAACgC,uBAAtB,CAA8C,KAAKd,KAAL,CAAWC,QAAzD,EAAkE,KAAKD,KAAL,CAAWE,KAA7E,EAAmF,KAAKF,KAAL,CAAWG,QAA9F;AAEH,KALN,EAKQY,KALR,CAKc,MAAM;AACX,WAAKL,QAAL,CAAc;AAAEL,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KARN;AAUF,GAtCkC,CAwCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAY,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,SAAD,OAAe1B,KAAf;AAAsB,QAAA,KAAK,EAAEG,MAAM,CAACwB,GAAP,CAAW,OAAX;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AA9DkC;;AAiEvC,eAAenB,cAAf","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport LoginForm from '../components/LoginForm';\n\n\nconst inputs = [{\n    name: \"username\",\n    placeholder: \"username\",\n    type: \"text\"\n  },{\n    name: \"email\",\n    placeholder: \"email\",\n    type: \"text\"\n  },{\n    name: \"password\",\n    placeholder: \"password\",\n    type: \"email\"\n  },{\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn\" \n  }]\n  \nconst props = {\n    name: 'loginForm',\n    method: 'POST',\n    action: '/perform_login',\n    inputs: inputs\n  }\n  \nconst params = new URLSearchParams(window.location.search)\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            email:'',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n\n       AuthenticationService\n            .executeBasicAuthenticationService(this.state.username,this.state.email, this.state.password)\n            .then(() => {\n                AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.email,this.state.password)\n\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    // render() {\n    //     return (\n    //         <div>\n    //             <h1>Login</h1>\n    //             <div className=\"container\">\n    //                 {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n    //                 {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n    //                 {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n    //                 {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n    //                 User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n    //                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n    //                 <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n    render(){\n        return(\n            <>\n                <LoginForm {...props} error={params.get('error')} />\n            </>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}