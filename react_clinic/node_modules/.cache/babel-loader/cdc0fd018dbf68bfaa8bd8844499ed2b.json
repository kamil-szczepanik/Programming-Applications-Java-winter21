{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js\";\nimport React from 'react';\nimport props from 'prop-types';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\nimport ContactComponent from './ContactComponent';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myAppointments: [],\n      doctors: [],\n      myAppointmentsDoctor: []\n    };\n  }\n\n  componentDidMount() {\n    if (window.response !== undefined) {\n      if (window.response.roles[0] === \"PATIENT\") {\n        AppointmentService.getAppointments().then(response => {\n          this.setState({\n            myAppointments: response.data\n          });\n        });\n        DoctorService.getDoctors().then(response => {\n          this.setState({\n            doctors: response.data\n          });\n        });\n      }\n\n      if (window.response.roles[0] === \"DOCTOR\") {\n        DoctorAppointmentService.getAppointments().then(response => {\n          this.setState({\n            myAppointmentsDoctor: response.data\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    var docId = null;\n    var docName = null;\n    var docSurname = null;\n\n    if (window.response === undefined) {\n      return window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }, this) : null;\n    }\n\n    if (window.response.roles[0] === \"PATIENT\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Moje wizyty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 50\n        }, this) : null, this.state.myAppointments.map(appointment => {\n          this.state.doctors.forEach(doctor => {\n            if (doctor.id === appointment.doctorId) {\n              docId = doctor.id;\n              docName = doctor.firstName;\n              docSurname = doctor.lastName;\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"appointment\",\n              children: [\" Doktor: \", docName + \" \" + docSurname]\n            }, \"doctor\" + appointment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"appointment\",\n              children: [\" \", appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)]\n            }, appointment.id + 1000, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"DOCTOR\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Moje wizyty1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 50\n        }, this) : null, this.state.myAppointmentsDoctor.map(appointment => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"appointment\",\n              children: [\" \", appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)]\n            }, appointment.id + 1000, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default MyAppointments;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js"],"names":["React","props","useHistory","Redirect","AppointmentService","DoctorService","AddAppointment","BrowserRouter","Route","NavLink","Switch","ContactComponent","MyAppointmentsService","DoctorAppointmentService","MyAppointments","Component","constructor","state","myAppointments","doctors","myAppointmentsDoctor","componentDidMount","window","response","undefined","roles","getAppointments","then","setState","data","getDoctors","render","docId","docName","docSurname","map","appointment","forEach","doctor","id","doctorId","firstName","lastName","date","toString","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,kBAAnC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA8BC,OAA9B,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,wBAAP,MAAqC,sCAArC;;;;AACA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA4C;AACxCC,EAAAA,WAAW,CAACf,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKgB,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAC,EADN;AAETC,MAAAA,OAAO,EAAC,EAFC;AAGTC,MAAAA,oBAAoB,EAAC;AAHZ,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAGC,MAAM,CAACC,QAAP,KAAkBC,SAArB,EAA+B;AAC3B,UAAIF,MAAM,CAACC,QAAP,CAAgBE,KAAhB,CAAsB,CAAtB,MAA2B,SAA/B,EAAyC;AACzCrB,QAAAA,kBAAkB,CAACsB,eAAnB,GAAqCC,IAArC,CAA2CJ,QAAD,IAAY;AAClD,eAAKK,QAAL,CAAc;AAACV,YAAAA,cAAc,EAAEK,QAAQ,CAACM;AAA1B,WAAd;AACH,SAFD;AAGAxB,QAAAA,aAAa,CAACyB,UAAd,GAA2BH,IAA3B,CAAiCJ,QAAD,IAAY;AACxC,eAAKK,QAAL,CAAc;AAACT,YAAAA,OAAO,EAAEI,QAAQ,CAACM;AAAnB,WAAd;AACH,SAFD;AAGC;;AACD,UAAGP,MAAM,CAACC,QAAP,CAAgBE,KAAhB,CAAsB,CAAtB,MAA2B,QAA9B,EAAuC;AACnCZ,QAAAA,wBAAwB,CAACa,eAAzB,GAA2CC,IAA3C,CAAiDJ,QAAD,IAAY;AACxD,eAAKK,QAAL,CAAc;AAACR,YAAAA,oBAAoB,EAAEG,QAAQ,CAACM;AAAhC,WAAd;AACH,SAFD;AAGH;AAER;AAAC;;AAEFE,EAAAA,MAAM,GAAE;AACJ,QAAIC,KAAK,GAAC,IAAV;AACA,QAAIC,OAAO,GAAC,IAAZ;AACA,QAAIC,UAAU,GAAC,IAAf;;AACA,QAAGZ,MAAM,CAACC,QAAP,KAAkBC,SAArB,EAA+B;AAC3B,aACIF,MAAM,CAACC,QAAP,KAAkBC,SAAlB,gBAA4B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAA5B,GAA+C,IADnD;AAGH;;AACD,QAAGF,MAAM,CAACC,QAAP,CAAgBE,KAAhB,CAAsB,CAAtB,MAA2B,SAA9B,EAAwC;AACpC,0BAEI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKH,MAAM,CAACC,QAAP,KAAkBC,SAAlB,gBAA4B,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAA+C,IAHpD,EAOI,KAAKP,KAAL,CAAWC,cAAX,CAA0BiB,GAA1B,CACAC,WAAW,IAAE;AACT,eAAKnB,KAAL,CAAWE,OAAX,CAAmBkB,OAAnB,CACIC,MAAM,IAAE;AACR,gBAAGA,MAAM,CAACC,EAAP,KAAYH,WAAW,CAACI,QAA3B,EAAoC;AAChCR,cAAAA,KAAK,GAACM,MAAM,CAACC,EAAb;AACAN,cAAAA,OAAO,GAACK,MAAM,CAACG,SAAf;AACAP,cAAAA,UAAU,GAACI,MAAM,CAACI,QAAlB;AACH;AAEJ,WARD;AAUA,8BACA;AAAA,oCACI;AAAG,cAAA,SAAS,EAAG,aAAf;AAAA,sCAAqET,OAAO,GAAC,GAAR,GAAYC,UAAjF;AAAA,eAAkC,WAASE,WAAW,CAACG,EAAvD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAG,aAAf;AAAA,8BAAyDH,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,CAAlC,EAAoC,EAApC,IAAwC,GAAxC,GAA4CT,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,EAAlC,EAAqC,EAArC,CAArG;AAAA,eAAkCT,WAAW,CAACG,EAAZ,GAAe,IAAjD;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,0BADA;AAOH,SAnBD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAmCH;;AACD,QAAGjB,MAAM,CAACC,QAAP,CAAgBE,KAAhB,CAAsB,CAAtB,MAA2B,QAA9B,EAAuC;AACnC,0BAEI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKH,MAAM,CAACC,QAAP,KAAkBC,SAAlB,gBAA4B,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAA+C,IAHpD,EAOI,KAAKP,KAAL,CAAWG,oBAAX,CAAgCe,GAAhC,CACAC,WAAW,IAAE;AAET,8BACA;AAAA,oCACI;AAAG,cAAA,SAAS,EAAG,aAAf;AAAA,8BAAyDA,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,CAAlC,EAAoC,EAApC,IAAwC,GAAxC,GAA4CT,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,EAAlC,EAAqC,EAArC,CAArG;AAAA,eAAkCT,WAAW,CAACG,EAAZ,GAAe,IAAjD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADA;AAMH,SATD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAyBH;AACJ;;AAtGuC;;AA0G5C,eAAezB,cAAf","sourcesContent":["import React from 'react';\nimport props from 'prop-types';\nimport {useHistory, Redirect} from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport ContactComponent from './ContactComponent'\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nclass MyAppointments extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            myAppointmentsDoctor:[],\n            \n        }\n    }\n\n    componentDidMount(){\n        if(window.response!==undefined){\n            if (window.response.roles[0]===\"PATIENT\"){\n            AppointmentService.getAppointments().then((response)=>{\n                this.setState({myAppointments: response.data})\n            });\n            DoctorService.getDoctors().then((response)=>{\n                this.setState({doctors: response.data})\n            });\n            }\n            if(window.response.roles[0]===\"DOCTOR\"){\n                DoctorAppointmentService.getAppointments().then((response)=>{\n                    this.setState({myAppointmentsDoctor: response.data})\n                });\n            }\n\n    }}\n       \n    render(){\n        var docId=null;\n        var docName=null;\n        var docSurname=null;\n        if(window.response===undefined){\n            return(\n                window.response===undefined?<Redirect to='/'/>:null\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n            return(\n\n                <div>\n                    <h2>Moje wizyty</h2> \n                    <br></br> \n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                    \n                    this.state.myAppointments.map(\n                    appointment=>{\n                        this.state.doctors.forEach(\n                            doctor=>{\n                            if(doctor.id===appointment.doctorId){\n                                docId=doctor.id;\n                                docName=doctor.firstName;\n                                docSurname=doctor.lastName;    \n                            }\n\n                        })\n\n                        return (\n                        <>\n                            <p className = \"appointment\" key={\"doctor\"+appointment.id}> Doktor: {docName+\" \"+docSurname}</p>\n                            <p className = \"appointment\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            <br></br>\n                        </>)\n\n                    }\n                    )\n                }\n                \n                </div>\n                    \n            )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n\n                <div>\n                    <h2>Moje wizyty1</h2> \n                    <br></br> \n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                    \n                    this.state.myAppointmentsDoctor.map(\n                    appointment=>{\n\n                        return (\n                        <>\n                            <p className = \"appointment\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            <br></br>\n                        </>)\n\n                    }\n                    )\n                }\n                \n                </div>\n                    \n            )\n        }\n    }\n}\n\n\nexport default MyAppointments;"]},"metadata":{},"sourceType":"module"}