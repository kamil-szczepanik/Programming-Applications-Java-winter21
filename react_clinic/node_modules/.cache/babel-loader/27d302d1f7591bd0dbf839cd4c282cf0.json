{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginComponent.js\";\n// import React, { Component } from 'react'\n// import AuthenticationService from '../services/AuthenticationService';\n// class LoginComponent extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             username: 'in28minutes',\n//             password: '',\n//             hasLoginFailed: false,\n//             showSuccessMessage: false\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.loginClicked = this.loginClicked.bind(this)\n//     }\n//     handleChange(event) {\n//         this.setState(\n//             {\n//                 [event.target.name]\n//                     : event.target.value\n//             }\n//         )\n//     }\n//     // loginClicked() {\n//     //     if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n//     //         AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n//     //         this.setState({showSuccessMessage:true})\n//     //         this.setState({hasLoginFailed:false})\n//     //     }\n//     //     else {\n//     //          this.setState({showSuccessMessage:false})\n//     //          this.setState({hasLoginFailed:true})\n//     //     }\n//     // }\n//     // loginClicked() {\n//     //     if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n//     //         this.props.history.push(`/doctors`)\n//     //         //this.setState({showSuccessMessage:true})\n//     //         //this.setState({hasLoginFailed:false})\n//     //     }\n//     //     else {\n//     //          this.setState({showSuccessMessage:false})\n//     //          this.setState({hasLoginFailed:true})\n//     //     }\n//     // }\n//         loginClicked(){\n//             AuthenticationService\n//     .executeBasicAuthenticationService(this.state.username, this.state.password)\n//     .then(() => {\n//         AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n//         this.props.history.push(`/courses`)\n//     }).catch(() => {\n//         this.setState({ showSuccessMessage: false })\n//         this.setState({ hasLoginFailed: true })\n//     })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Login</h1>\n//                 <div className=\"container\">\n//                     {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n//                     {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n//                     User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} /><br/>\n//                     Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n//                     <br/><button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default LoginComponent\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport LoginForm from '../components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  name: \"username\",\n  placeholder: \"username\",\n  type: \"text\"\n}, {\n  name: \"password\",\n  placeholder: \"password\",\n  type: \"password\"\n}, {\n  type: \"submit\",\n  value: \"Submit\",\n  className: \"btn\"\n}];\nconst props = {\n  name: 'loginForm',\n  method: 'POST',\n  action: '/perform_login',\n  inputs: inputs\n};\nconst params = new URLSearchParams(window.location.search);\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 51\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Sucessful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 55\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 32\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  } // render(){\n  //     return(\n  //         <>\n  //             <LoginForm {...props} error={params.get('error')} />\n  //         </>\n  //     )\n  // }\n\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/LoginComponent.js"],"names":["React","Component","AuthenticationService","LoginForm","inputs","name","placeholder","type","value","className","props","method","action","params","URLSearchParams","window","location","search","LoginComponent","constructor","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","executeBasicAuthenticationService","then","registerSuccessfulLogin","catch","render"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// import AuthenticationService from '../services/AuthenticationService';\n\n// class LoginComponent extends Component {\n\n//     constructor(props) {\n//         super(props)\n\n//         this.state = {\n//             username: 'in28minutes',\n//             password: '',\n//             hasLoginFailed: false,\n//             showSuccessMessage: false\n//         }\n\n//         this.handleChange = this.handleChange.bind(this)\n//         this.loginClicked = this.loginClicked.bind(this)\n//     }\n\n//     handleChange(event) {\n//         this.setState(\n//             {\n//                 [event.target.name]\n//                     : event.target.value\n//             }\n//         )\n//     }\n\n//     // loginClicked() {\n//     //     if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n//     //         AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n//     //         this.setState({showSuccessMessage:true})\n//     //         this.setState({hasLoginFailed:false})\n//     //     }\n//     //     else {\n//     //          this.setState({showSuccessMessage:false})\n//     //          this.setState({hasLoginFailed:true})\n//     //     }\n//     // }\n//     // loginClicked() {\n//     //     if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n//     //         this.props.history.push(`/doctors`)\n//     //         //this.setState({showSuccessMessage:true})\n//     //         //this.setState({hasLoginFailed:false})\n//     //     }\n//     //     else {\n//     //          this.setState({showSuccessMessage:false})\n//     //          this.setState({hasLoginFailed:true})\n//     //     }\n//     // }\n//         loginClicked(){\n//             AuthenticationService\n//     .executeBasicAuthenticationService(this.state.username, this.state.password)\n//     .then(() => {\n//         AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n//         this.props.history.push(`/courses`)\n//     }).catch(() => {\n//         this.setState({ showSuccessMessage: false })\n//         this.setState({ hasLoginFailed: true })\n//     })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Login</h1>\n//                 <div className=\"container\">\n//                     {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n//                     {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n//                     User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} /><br/>\n//                     Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n//                     <br/><button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default LoginComponent\n\n\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport LoginForm from '../components/LoginForm';\n\n\nconst inputs = [{\n    name: \"username\",\n    placeholder: \"username\",\n    type: \"text\"\n  },{\n    name: \"password\",\n    placeholder: \"password\",\n    type: \"password\"\n  },{\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn\" \n  }]\n  \nconst props = {\n    name: 'loginForm',\n    method: 'POST',\n    action: '/perform_login',\n    inputs: inputs\n  }\n  \nconst params = new URLSearchParams(window.location.search)\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n\n       AuthenticationService\n            .executeBasicAuthenticationService(this.state.username, this.state.password)\n            .then(() => {\n                AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n    // render(){\n    //     return(\n    //         <>\n    //             <LoginForm {...props} error={params.get('error')} />\n    //         </>\n    //     )\n    // }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}