{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/my-app/src/Input.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChange = event => {\n      const value = event.target.value,\n            name = event.target.name;\n\n      switch (name) {\n        case 'username':\n          this.validate(name, value, /^([a-zA-Z0-9.]{4,})$/, 'invalid username');\n          break;\n\n        case 'password':\n          this.validate(name, value, /^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z]).{6,}$/, 'insecure password');\n          break;\n\n        default:\n          console.warn(`unknown field ${name}`);\n      }\n\n      this.setState({\n        value: value\n      });\n    };\n\n    this.validate = (name, value, validRegex, warnmsg) => {\n      const invalid = !value || !validRegex.test(value);\n\n      if (!this.state.error && invalid) {\n        this.setState({\n          className: 'input-error',\n          error: true\n        });\n        this.handleError(name, warnmsg);\n      } else if (this.state.error && !invalid) {\n        this.setState({\n          className: '',\n          error: false\n        });\n        this.handleError(name);\n      }\n    };\n\n    this.state = {\n      value: props.value ? props.value : '',\n      className: props.className ? props.className : '',\n      error: false\n    };\n  }\n\n  render() {\n    const {\n      handleError,\n      ...opts\n    } = this.props;\n    this.handleError = handleError;\n    return /*#__PURE__*/_jsxDEV(\"input\", { ...opts,\n      value: this.state.value,\n      onChange: this.inputChange,\n      className: this.state.className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  handleError: PropTypes.func,\n  value: PropTypes.string\n};\nexport default Input;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/my-app/src/Input.js"],"names":["React","Component","PropTypes","Input","constructor","props","inputChange","event","value","target","name","validate","console","warn","setState","validRegex","warnmsg","invalid","test","state","error","className","handleError","render","opts","propTypes","string","placeholder","type","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAShBC,WATgB,GASDC,KAAD,IAAW;AACvB,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAAA,YAAkCE,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAAtD;;AACA,cAAOA,IAAP;AACC,aAAK,UAAL;AAAiB,eAAKC,QAAL,CAAcD,IAAd,EAAoBF,KAApB,EAA2B,sBAA3B,EAAmD,kBAAnD;AACf;;AACF,aAAK,UAAL;AAAiB,eAAKG,QAAL,CAAcD,IAAd,EAAoBF,KAApB,EAA2B,0CAA3B,EAAuE,mBAAvE;AACf;;AACF;AACEI,UAAAA,OAAO,CAACC,IAAR,CAAc,iBAAgBH,IAAK,EAAnC;AANH;;AAQA,WAAKI,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KApBe;;AAAA,SAsBhBG,QAtBgB,GAsBL,CAACD,IAAD,EAAOF,KAAP,EAAcO,UAAd,EAA0BC,OAA1B,KAAsC;AAC/C,YAAMC,OAAO,GAAG,CAACT,KAAD,IAAU,CAACO,UAAU,CAACG,IAAX,CAAgBV,KAAhB,CAA3B;;AACA,UAAG,CAAC,KAAKW,KAAL,CAAWC,KAAZ,IAAqBH,OAAxB,EAAiC;AAC/B,aAAKH,QAAL,CAAc;AAAEO,UAAAA,SAAS,EAAE,aAAb;AAA4BD,UAAAA,KAAK,EAAE;AAAnC,SAAd;AACA,aAAKE,WAAL,CAAiBZ,IAAjB,EAAuBM,OAAvB;AACD,OAHD,MAGM,IAAG,KAAKG,KAAL,CAAWC,KAAX,IAAoB,CAACH,OAAxB,EAAiC;AACrC,aAAKH,QAAL,CAAc;AAAEO,UAAAA,SAAS,EAAE,EAAb;AAAiBD,UAAAA,KAAK,EAAE;AAAxB,SAAd;AACA,aAAKE,WAAL,CAAiBZ,IAAjB;AACD;AACF,KA/Be;;AAEd,SAAKS,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAaH,KAAK,CAACG,KAAnB,GAA2B,EADvB;AAEXa,MAAAA,SAAS,EAAEhB,KAAK,CAACgB,SAAN,GAAiBhB,KAAK,CAACgB,SAAvB,GAAmC,EAFnC;AAGXD,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AA0BDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACD,MAAAA,WAAD;AAAc,SAAGE;AAAjB,QAAyB,KAAKnB,KAApC;AACA,SAAKiB,WAAL,GAAmBA,WAAnB;AACA,wBACE,sBAAWE,IAAX;AAAiB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWX,KAAnC;AAA0C,MAAA,QAAQ,EAAE,KAAKF,WAAzD;AAAsE,MAAA,SAAS,EAAE,KAAKa,KAAL,CAAWE;AAA5F;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAxCuB;;AA2C9BlB,KAAK,CAACsB,SAAN,GAAkB;AAChBf,EAAAA,IAAI,EAAER,SAAS,CAACwB,MADA;AAEhBC,EAAAA,WAAW,EAAEzB,SAAS,CAACwB,MAFP;AAGhBE,EAAAA,IAAI,EAAE1B,SAAS,CAACwB,MAHA;AAIhBL,EAAAA,SAAS,EAAEnB,SAAS,CAACwB,MAJL;AAKhBJ,EAAAA,WAAW,EAAEpB,SAAS,CAAC2B,IALP;AAMhBrB,EAAAA,KAAK,EAAEN,SAAS,CAACwB;AAND,CAAlB;AAQA,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Input extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          value: props.value? props.value : '',\n          className: props.className? props.className : '',\n          error: false\n        }\n      }\n    \n      inputChange = (event) => {\n        const value = event.target.value, name = event.target.name\n        switch(name) {\n         case 'username': this.validate(name, value, /^([a-zA-Z0-9.]{4,})$/, 'invalid username')\n           break;\n         case 'password': this.validate(name, value, /^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z]).{6,}$/, 'insecure password')\n           break;\n         default:\n           console.warn(`unknown field ${name}`)\n        }\n        this.setState({ value: value })\n      }\n    \n      validate = (name, value, validRegex, warnmsg) => {\n        const invalid = !value || !validRegex.test(value)\n        if(!this.state.error && invalid) {\n          this.setState({ className: 'input-error', error: true })\n          this.handleError(name, warnmsg)\n        }else if(this.state.error && !invalid) {\n          this.setState({ className: '', error: false })\n          this.handleError(name)\n        }\n      }\n    \n      render (){\n        const {handleError, ...opts} = this.props\n        this.handleError = handleError\n        return (\n          <input {...opts} value={this.state.value} onChange={this.inputChange} className={this.state.className} /> \n        )\n      }\n    }\n    \nInput.propTypes = {\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  handleError: PropTypes.func,\n  value: PropTypes.string\n}\nexport default Input"]},"metadata":{},"sourceType":"module"}