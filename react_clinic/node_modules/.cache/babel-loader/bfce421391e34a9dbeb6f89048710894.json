{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js\";\nimport React from 'react';\nimport props from 'prop-types';\nimport { useHistory } from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      doctors: []\n    };\n  }\n\n  getDoctorById(id) {}\n\n  addAppointment() {\n    console.log('dziala');\n\n    /*#__PURE__*/\n    _jsxDEV(Route, {\n      path: \"/addAppointment\",\n      component: MyAppointments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentDidMount() {\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addAppointment,\n        children: \"Zapisz si\\u0119 na wizyt\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Moje wizyty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.appointments.map(appointment => {\n          if (appointment.patient_id === 21) return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lekarz:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.state.doctors.map(doctor => {\n                return doctor.id === appointment.doctor_id ? doctor.specialisation + \" \" + doctor.firstName + \" \" + doctor.lastName : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Data wizyty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default MyAppointments;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js"],"names":["React","props","useHistory","AppointmentService","DoctorService","AddAppointment","BrowserRouter","Route","NavLink","Switch","MyAppointments","Component","constructor","state","appointments","doctors","getDoctorById","id","addAppointment","console","log","componentDidMount","getAppointments","then","response","setState","data","getDoctors","render","map","appointment","patient_id","doctor","doctor_id","specialisation","firstName","lastName","date","toString","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA8BC,OAA9B,EAAuCC,MAAvC,QAAqD,kBAArD;;;;AAEA,MAAMC,cAAN,SAA6BV,KAAK,CAACW,SAAnC,CAA4C;AACxCC,EAAAA,WAAW,CAACX,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKY,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAC,EADJ;AAETC,MAAAA,OAAO,EAAC;AAFC,KAAb;AAKH;;AAEDC,EAAAA,aAAa,CAACC,EAAD,EAAI,CAEhB;;AACDC,EAAAA,cAAc,GAAE;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA;AAAA,YAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEV;AAAzC;AAAA;AAAA;AAAA;AAAA;AAEH;;AACDW,EAAAA,iBAAiB,GAAE;AACflB,IAAAA,kBAAkB,CAACmB,eAAnB,GAAqCC,IAArC,CAA2CC,QAAD,IAAY;AAClD,WAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAAEU,QAAQ,CAACE;AAAxB,OAAd;AACH,KAFD;AAGAtB,IAAAA,aAAa,CAACuB,UAAd,GAA2BJ,IAA3B,CAAiCC,QAAD,IAAY;AAC5C,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAES,QAAQ,CAACE;AAAnB,OAAd;AACC,KAFD;AAMH;;AAEDE,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKV,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAEa;AAAA;AAAA;AAAA;AAAA,cAFb,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBACK,KAAKL,KAAL,CAAWC,YAAX,CAAwBe,GAAxB,CAA4BC,WAAW,IAAE;AACtC,cAAIA,WAAW,CAACC,UAAZ,KAAyB,EAA7B,EAAgC,oBAC5B;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAK,KAAKlB,KAAL,CAAWE,OAAX,CAAmBc,GAAnB,CAAuBG,MAAM,IAAE;AAAC,uBAAQA,MAAM,CAACf,EAAP,KAAYa,WAAW,CAACG,SAAxB,GAAkCD,MAAM,CAACE,cAAP,GAAwB,GAAxB,GAA8BF,MAAM,CAACG,SAArC,GAA+C,GAA/C,GAAmDH,MAAM,CAACI,QAA5F,GAAyG,IAAjH;AAAsH,eAAtJ;AAAL;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,wBAAKN,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,CAAlC,EAAoC,EAApC,IAA0C,GAA1C,GAAgDT,WAAW,CAACO,IAAZ,CAAiBC,QAAjB,GAA4BC,KAA5B,CAAkC,EAAlC,EAAqC,EAArC;AAArD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,0BAD4B;AAYnC,SAbA;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAuBH;;AAvDuC;;AA2D5C,eAAe7B,cAAf","sourcesContent":["import React from 'react';\nimport props from 'prop-types';\nimport {useHistory} from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\n\nclass MyAppointments extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            appointments:[],\n            doctors:[],\n            \n        }\n    }\n    \n    getDoctorById(id){\n\n    }\n    addAppointment(){\n        console.log('dziala');\n        <Route path='/addAppointment' component={MyAppointments}/>\n\n    }\n    componentDidMount(){\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        DoctorService.getDoctors().then((response)=>{\n        this.setState({doctors: response.data})\n        });\n\n        \n        \n    }\n\n    render(){\n\n        return(\n            <>\n                <button onClick={this.addAppointment}>Zapisz się na wizytę</button>\n                <br></br><br></br>\n                <h1>Moje wizyty</h1>\n                <div>\n                    {this.state.appointments.map(appointment=>{\n                        if (appointment.patient_id===21)return(\n                            <> \n                                <br></br>\n                                <p>Lekarz:</p>\n                                <h3>{this.state.doctors.map(doctor=>{return  doctor.id===appointment.doctor_id?doctor.specialisation + \" \" + doctor.firstName+\" \"+doctor.lastName   : null})}\n                                </h3>\n                                <p>Data wizyty:</p>\n                                <h3>{appointment.date.toString().slice(0,10) + \" \" + appointment.date.toString().slice(11,16)}</h3>\n                                \n                            </>\n                        )\n                        \n                    })}\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default MyAppointments;"]},"metadata":{},"sourceType":"module"}