{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js\";\nimport React from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctors: [],\n      appointments: []\n    };\n  }\n\n  componentDidMount() {\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.doctors.map(doctor => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: doctor.id,\n            name: doctor.firstName + doctor.lastName,\n            value: doctor.firstName + doctor.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: doctor.firstName + doctor.lastName,\n            children: doctor.firstName + doctor.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js"],"names":["React","props","DoctorService","AppointmentService","AddAppointment","Component","constructor","state","doctors","appointments","componentDidMount","getDoctors","then","response","setState","data","getAppointments","render","map","doctor","id","firstName","lastName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA4C;AAIxCC,EAAAA,WAAW,CAACL,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,YAAY,EAAC;AAFJ,KAAb;AAKH;;AAGDC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,aAAa,CAACS,UAAd,GAA2BC,IAA3B,CAAiCC,QAAD,IAAY;AACxC,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAnB,OAAd;AACH,KAFD;AAGAZ,IAAAA,kBAAkB,CAACa,eAAnB,GAAqCJ,IAArC,CAA2CC,QAAD,IAAY;AAClD,WAAKC,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAEI,QAAQ,CAACE;AAAxB,OAAd;AACH,KAFD;AAGH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBACK,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,GAAnB,CAAuBC,MAAM,IAAE;AAC5B,4BACI;AAAA,kCACA;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAEA,MAAM,CAACC,EAA/B;AACJ,YAAA,IAAI,EAAED,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACG,QAD5B;AACsC,YAAA,KAAK,EAAEH,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACG;AADvE;AAAA;AAAA;AAAA;AAAA,kBADA,eAGJ;AAAO,YAAA,GAAG,EAAEH,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACG,QAAtC;AAAA,sBAAiDH,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACG;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAHI;AAAA,wBADJ;AAOH,OARA;AADL,qBADJ;AAaH;;AArCuC;;AAwC5C,eAAelB,cAAf","sourcesContent":["import React from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n    }\n\n    render(){\n        return(\n            <>\n                {this.state.doctors.map(doctor=>{\n                    return(\n                        <>\n                        <input type=\"radio\" id={doctor.id}\n                    name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                    <label for={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                        </>\n                    )\n                })}\n            </>\n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}