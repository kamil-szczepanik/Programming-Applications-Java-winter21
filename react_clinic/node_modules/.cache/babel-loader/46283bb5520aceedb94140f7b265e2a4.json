{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js\";\nimport React from 'react';\nimport props from 'prop-types';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\nimport ContactComponent from './ContactComponent';\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyAppointments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myAppointments: [],\n      doctors: [],\n      myAppointmentsDoctor: []\n    };\n  }\n\n  componentDidMount() {\n    if (window.response !== undefined) {\n      if (window.response.roles[0] === \"PATIENT\") {\n        MyAppointmentsService.getMyAppointments().then(response => {\n          this.setState({\n            myAppointments: response.data\n          });\n        });\n        DoctorService.getDoctors().then(response => {\n          this.setState({\n            doctors: response.data\n          });\n        });\n      }\n\n      if (window.response.roles[0] === \"DOCTOR\") {\n        console.log(\"wykonano dla doktora\");\n        DoctorAppointmentService.getAppointments().then(response => {\n          this.setState({\n            myAppointmentsDoctor: response.data\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    var docId = null;\n    var docName = null;\n    var docSurname = null;\n    var docSpecialisation = null;\n\n    if (window.response === undefined) {\n      return window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }, this) : null;\n    }\n\n    if (window.response.roles[0] === \"ADMIN\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"PATIENT\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Moje wizyty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 50\n          }, this) : null, this.state.myAppointments.map(appointment => {\n            this.state.doctors.forEach(doctor => {\n              if (doctor.id === appointment.doctorId) {\n                docId = doctor.id;\n                docName = doctor.firstName;\n                docSurname = doctor.lastName;\n                docSpecialisation = doctor.specialisation;\n              }\n            });\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 gy-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"appointment text-dark\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray\",\n                    children: \"Doktor:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 98\n                  }, this), \" \", docName + \" \" + docSurname]\n                }, \"doctor\" + appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"appointment text-dark\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray\",\n                    children: \"Specjalizacja:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 98\n                  }, this), \" \", docSpecialisation]\n                }, \"doctor\" + appointment.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"appointment text-dark\",\n                  children: [\" \", appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)]\n                }, appointment.id + 1000, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 41\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row my-3\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/deleteAppointment\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-danger btn-lg\",\n                children: \"Usu\\u0144 wizyt\\u0119\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"DOCTOR\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wizyty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dost\\u0119pne terminy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\",\n          children: [window.response === undefined ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 50\n          }, this) : null, this.state.myAppointmentsDoctor.map(appointment => {\n            if (appointment.patientId === null) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card p-3 h-100 bg-light text-center justify-content-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-dark m-auto\",\n                      children: [\" \", appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)]\n                    }, appointment.id + 1000, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Zaj\\u0119te terminy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\",\n          children: this.state.myAppointmentsDoctor.map(appointment => {\n            if (appointment.patientId !== null) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card p-3 h-100 bg-light text-center justify-content-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-dark m-auto\",\n                      children: [\" \", appointment.date.toString().slice(0, 10) + \" \" + appointment.date.toString().slice(11, 16)]\n                    }, appointment.id + 1000, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default MyAppointments;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/myAppointments.js"],"names":["React","props","useHistory","Redirect","AppointmentService","DoctorService","AddAppointment","BrowserRouter","Route","NavLink","Switch","ContactComponent","MyAppointmentsService","DoctorAppointmentService","MyAppointments","Component","constructor","state","myAppointments","doctors","myAppointmentsDoctor","componentDidMount","window","response","undefined","roles","getMyAppointments","then","setState","data","getDoctors","console","log","getAppointments","render","docId","docName","docSurname","docSpecialisation","map","appointment","forEach","doctor","id","doctorId","firstName","lastName","specialisation","date","toString","slice","patientId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport props from 'prop-types';\nimport {useHistory, Redirect} from \"react-router-dom\";\nimport AppointmentService from '../services/AppointmentService';\nimport DoctorService from '../services/DoctorService';\nimport AddAppointment from './AddAppointment';\nimport { BrowserRouter, Route,NavLink, Switch } from 'react-router-dom';\nimport ContactComponent from './ContactComponent'\nimport MyAppointmentsService from '../services/MyAppointmentsService';\nimport DoctorAppointmentService from '../services/DoctorAppointmentService';\nclass MyAppointments extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            myAppointments:[],\n            doctors:[],\n            myAppointmentsDoctor:[],\n            \n        }\n    }\n\n    componentDidMount(){\n        if(window.response!==undefined){\n            if (window.response.roles[0]===\"PATIENT\"){\n            MyAppointmentsService.getMyAppointments().then((response)=>{\n                this.setState({myAppointments: response.data})\n            });\n            DoctorService.getDoctors().then((response)=>{\n                this.setState({doctors: response.data})\n            });\n            }\n            if(window.response.roles[0]===\"DOCTOR\"){\n                console.log(\"wykonano dla doktora\")\n                DoctorAppointmentService.getAppointments().then((response)=>{\n                    this.setState({myAppointmentsDoctor: response.data})\n                });\n            }\n\n    }}\n       \n    render(){\n        var docId=null;\n        var docName=null;\n        var docSurname=null;\n        var docSpecialisation=null;\n        if(window.response===undefined){\n            return(\n                window.response===undefined?<Redirect to='/'/>:null\n                )\n        }\n        if(window.response.roles[0]===\"ADMIN\"){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n            return(\n\n                <div className=\"container mt-3\">\n                    <h1>Moje wizyty</h1> \n                    \n                    <div className=\"row\">\n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                        \n                        this.state.myAppointments.map(\n                            appointment=>{\n                                this.state.doctors.forEach(\n                                    doctor=>{\n                                        if(doctor.id===appointment.doctorId){\n                                            docId=doctor.id;\n                                            docName=doctor.firstName;\n                                            docSurname=doctor.lastName;    \n                                            docSpecialisation=doctor.specialisation;\n                                        }\n                                        \n                                    })\n                                    \n                                    return (\n                                        <div className=\"col-md-4 gy-3\">\n                            <div className=\"card\">\n                            <p className = \"appointment text-dark\" key={\"doctor\"+appointment.id}><span className=\"text-gray\">Doktor:</span> {docName+\" \"+docSurname}</p>\n                            <p className = \"appointment text-dark\" key={\"doctor\"+appointment.id}><span className=\"text-gray\">Specjalizacja:</span> {docSpecialisation}</p>\n\n                            <p className = \"appointment text-dark\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            </div>\n                        </div>)\n\n}\n                    )\n                }\n                <div className=\"row my-3\">\n                <NavLink to=\"/deleteAppointment\"><button type=\"button\" className=\"btn btn-outline-danger btn-lg\">Usuń wizytę</button></NavLink>\n                </div>\n                </div>\n                </div>\n                    \n            )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n\n                <div className=\"container mt-5\">\n                    <h1>Wizyty</h1>\n                    <h2>Dostępne terminy</h2> \n                    <div class=\"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\">\n                    {window.response===undefined?<Redirect to='/'/>:null}\n\n                    {\n                    \n                    this.state.myAppointmentsDoctor.map(\n                    appointment=>{\n                        if (appointment.patientId===null){\n\n                        \n                        return (\n                        <>\n                            <div className=\"col\">\n                                <div class=\"card p-3 h-100 bg-light text-center justify-content-center\">\n\n                                <p className= \"text-dark m-auto\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n\n                                </div>\n\n                            </div>\n                        </>)\n                        }\n\n                    }\n                    )\n                }\n                </div>\n                <h2>Zajęte terminy</h2> \n                <div class=\"row row-cols-1 row-cols-md-3 g-2 g-md-3 my-2\">\n                    {\n                    \n                    this.state.myAppointmentsDoctor.map(\n                    appointment=>{\n                        if (appointment.patientId!==null){\n\n                        \n                        return (\n                        <>\n                        <div className=\"col\">\n                                <div class=\"card p-3 h-100 bg-light text-center justify-content-center\">\n                            <p className = \"text-dark m-auto\" key={appointment.id+1000}> {appointment.date.toString().slice(0,10)+\" \"+appointment.date.toString().slice(11,16)}</p>\n                            </div>\n                            </div>\n                        </>)\n                        }\n\n                    }\n                    )\n                }\n                </div>\n                </div>\n            )\n        }\n    }\n}\n\n\nexport default MyAppointments;"]},"metadata":{},"sourceType":"module"}