{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"appointment_form\",\n      children: [this.state.doctors.map(doctor => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: doctor.id,\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            name: \"doctors\",\n            value: doctor.firstName + doctor.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: doctor.firstName + doctor.lastName,\n            children: doctor.firstName + doctor.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Dodaj wizyt\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Create, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n\n_c = Create;\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = (event, data) => {\n      fetch('http://localhost:8080/api/appointment', {\n        method: 'POST',\n        // headers:{\"\"}\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        console.log(response);\n        return response.json();\n      });\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      appDate: null,\n      appDocID: null,\n      appPacID: null,\n      appTime: null\n    };\n  }\n\n  componentDidMount() {\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AddAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js"],"names":["React","useState","props","DoctorService","AppointmentService","Create","title","setTitle","state","doctors","map","doctor","id","e","target","value","firstName","lastName","AddAppointment","Component","constructor","handlePressedButton","event","data","fetch","method","body","JSON","stringify","then","response","console","log","json","appointments","appDate","appDocID","appPacID","appTime","componentDidMount","getDoctors","setState","getAppointments","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","render","today"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\n\n\nconst Create = () =>{\n    const [title, setTitle] = useState('');\n\n    return(\n        <>\n            <form id=\"appointment_form\">\n                        \n                        {this.state.doctors.map(doctor=>{\n                            return(\n                                \n                                    <>\n                                        <input type=\"radio\" id={doctor.id} value={title} onChange={(e)=>setTitle(e.target.value)}\n                                        name=\"doctors\" value={doctor.firstName + doctor.lastName}/>\n                                        <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                                    </>\n                            \n                            \n                                \n                            )\n                        })}\n                    \n                        {/* <div className=\"dateInAppointmentCreating\">\n                            \n                                <label htmlFor=\"1\">Data wizyty:</label>\n                                <input onChange={(e)=>this.setState(this.state.appDate(e.target.value))} type=\"date\" id=\"1234\" name=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                                <input value={appTime} type=\"time\" id=\"12345\"name=\"12345\" min='10' max='19'  step=\"1200\"required/>\n    \n                            \n                        </div> */}\n                        <button>Dodaj wizytÄ™</button>\n                        \n                    </form>\n                    <p>{title}</p>\n        </>\n    )\n}\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            appDate:null,\n            appDocID:null,\n            appPacID:null,\n            appTime:null,\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    handlePressedButton = (event, data) =>{\n       \n\n\n\n        fetch('http://localhost:8080/api/appointment', {\n        method: 'POST',\n        // headers:{\"\"}\n        body: JSON.stringify(data)\n      }).then(function(response) {\n        console.log(response)\n        return response.json();\n      });\n    }\n\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>\n                {/* <form onSubmit={this.handlePressedButton(data)} method=\"post\" id=\"appointment_form\">\n                        \n                    {this.state.doctors.map(doctor=>{\n                        return(\n                            \n                                <>\n                                    <input type=\"radio\" id={doctor.id}\n                                    name=\"doctors\" value={doctor.firstName + doctor.lastName}/>\n                                    <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                                </>\n                        \n                        \n                            \n                        )\n                    })}\n                \n                    <div className=\"dateInAppointmentCreating\">\n                        \n                            <label htmlFor=\"1\">Data wizyty:</label>\n                            <input onChange={(e)=>this.setState(this.state.appDate(e.target.value))} type=\"date\" id=\"1234\" name=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                            <input value={appTime} type=\"time\" id=\"12345\"name=\"12345\" min='10' max='19'  step=\"1200\"required/>\n\n                        \n                    </div>\n                    <button>Dodaj wizytÄ™</button>\n                    \n                </form>\n                <p>{this.state.appDate}</p> */}\n                <Create/>\n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}