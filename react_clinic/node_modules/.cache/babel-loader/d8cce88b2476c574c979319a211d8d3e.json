{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js\";\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = (event, data) => {\n      fetch('http://localhost:8080/api/appointment', {\n        method: 'POST',\n        // headers:{\"\"}\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        console.log(response);\n        return response.json();\n      });\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      appDate: null,\n      appDocID: null,\n      appPacID: 21,\n      appTime: null\n    };\n  }\n\n  componentDidMount() {\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  dateHandleChange(event) {\n    event.preventDefault();\n    console.log(\"no siema\");\n    this.setState({\n      appDate: event.target.value\n    });\n    console.log(this.state.appDate);\n  }\n\n  timeHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appTime: event.target.value\n    });\n    console.log(this.state.appTime);\n  }\n\n  onChangeValue(event) {\n    console.log('doc dziala');\n    this.setState({\n      appDocID: event.target.value\n    });\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        id: \"appointment_form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctorsInAppointmentCreating\",\n          onChange: this.onChangeValue.bind(this),\n          children: this.state.doctors.map(doctor => {\n            return (\n              /*#__PURE__*/\n              // <div className=\"doctorsInAppointmentCreating\">\n              //     <input type=\"radio\" id={doctor.id}\n              //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n              //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n              // </div>\n              _jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: doctor.id,\n                  name: \"doctors\",\n                  value: doctor.id,\n                  on: e => this.doctorIdHandleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: doctor.firstName + doctor.lastName,\n                  children: doctor.firstName + doctor.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateInAppointmentCreating\",\n          onChange: e => this.dateHandleChange.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"1\",\n            children: \"Data wizyty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.appDate,\n            onChange: e => this.setState({\n              appDate: e.target.value\n            }),\n            type: \"date\",\n            id: \"1234\",\n            min: this.dateToString(today, 2),\n            max: this.dateToString(today, 16),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.appTime,\n            onChange: e => this.timeHandleChange,\n            type: \"time\",\n            id: \"12345\",\n            name: \"12345\",\n            min: \"10\",\n            max: \"19\",\n            step: \"1200\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.appTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Dodaj wizyt\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment.js"],"names":["React","useState","props","DoctorService","AppointmentService","AddAppointment","Component","constructor","handlePressedButton","event","data","fetch","method","body","JSON","stringify","then","response","console","log","json","state","doctors","appointments","appDate","appDocID","appPacID","appTime","componentDidMount","getDoctors","setState","getAppointments","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","dateHandleChange","preventDefault","target","value","timeHandleChange","onChangeValue","render","today","bind","map","doctor","id","e","doctorIdHandleChange","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            appDate:null,\n            appDocID:null,\n            appPacID:21,\n            appTime:null,\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    handlePressedButton = (event, data) =>{\n       \n\n\n\n        fetch('http://localhost:8080/api/appointment', {\n        method: 'POST',\n        // headers:{\"\"}\n        body: JSON.stringify(data)\n      }).then(function(response) {\n        console.log(response)\n        return response.json();\n      });\n    }\n    dateHandleChange(event){\n        event.preventDefault();\n        console.log(\"no siema\");\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        console.log('doc dziala')\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>\n                <form  method=\"post\" id=\"appointment_form\">\n                    <div className=\"doctorsInAppointmentCreating\" onChange={this.onChangeValue.bind(this)}>\n                    {this.state.doctors.map(doctor=>{\n                        return(\n                            \n                        // <div className=\"doctorsInAppointmentCreating\">\n                        //     <input type=\"radio\" id={doctor.id}\n                        //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                        //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                        // </div>\n                            <>\n                                \n                                    <input type=\"radio\" id={doctor.id}\n                                    name=\"doctors\" value={doctor.id} on={(e)=>this.doctorIdHandleChange}/>\n                                    <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                                \n                            </>\n                        \n                        \n                            \n                        )\n                    })}\n                    </div>\n                \n                    <div className=\"dateInAppointmentCreating\" onChange={(e)=>this.dateHandleChange.bind(this)}>\n                        \n                            <label htmlFor=\"1\">Data wizyty:</label>\n                            <input value={this.state.appDate} onChange={(e)=>this.setState({appDate:e.target.value})} type=\"date\" id=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                            <input value={this.state.appTime} onChange={(e)=>this.timeHandleChange} type=\"time\" id=\"12345\"name=\"12345\" min='10' max='19'  step=\"1200\"required/>\n\n                        \n                    </div>\n                    <p>{this.state.appTime}</p>\n                    <button >Dodaj wizytę</button>\n                    \n                </form>\n                \n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}