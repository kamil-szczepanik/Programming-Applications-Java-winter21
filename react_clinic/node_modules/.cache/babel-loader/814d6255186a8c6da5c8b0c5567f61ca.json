{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/PatientRegisterComponent.js\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport RegistrationForm from '../components/RegistrationForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst inputs = [{\n  name: \"firstName\",\n  placeholder: \"firstName\",\n  type: \"text\"\n}, {\n  name: \"lastName\",\n  placeholder: \"lastName\",\n  type: \"text\"\n}, {\n  name: \"email\",\n  placeholder: \"email\",\n  type: \"email\"\n}, {\n  name: \"password\",\n  placeholder: \"password\",\n  type: \"password\"\n}, {\n  name: \"pesel\",\n  placeholder: \"pesel\",\n  type: \"text\",\n  maxlength: 11\n}, {\n  name: \"dob\",\n  placeholder: \"dob\",\n  type: \"date\"\n}, {\n  type: \"submit\",\n  value: \"Submit\",\n  className: \"btn\"\n}];\nconst props = {\n  name: 'loginForm',\n  method: 'POST',\n  action: '/perform_login',\n  inputs: inputs\n};\nconst params = new URLSearchParams(window.location.search);\n\nclass RegistrationComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeBasicAuthenticationService(this.state.firstName, this.state.lastName, this.state.email, this.state.password).then(() => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.lastName, this.state.email, this.state.password);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  } // render() {\n  //     return (\n  //         <div>\n  //             <h1>Login</h1>\n  //             <div className=\"container\">\n  //                 {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n  //                 {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n  //                 {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n  //                 {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n  //                 User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n  //                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n  //                 <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n  //             </div>\n  //         </div>\n  //     )\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationForm, { ...props,\n        error: params.get('error')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default RegistrationComponent;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/PatientRegisterComponent.js"],"names":["React","Component","AuthenticationService","RegistrationForm","inputs","name","placeholder","type","maxlength","value","className","props","method","action","params","URLSearchParams","window","location","search","RegistrationComponent","constructor","state","firstName","lastName","email","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","executeBasicAuthenticationService","then","registerSuccessfulLogin","username","catch","render","get"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport RegistrationForm from '../components/RegistrationForm';\n\n\nconst inputs = [{\n    name: \"firstName\",\n    placeholder: \"firstName\",\n    type: \"text\"\n  },{\n    name: \"lastName\",\n    placeholder: \"lastName\",\n    type: \"text\"\n  },{\n    name: \"email\",\n    placeholder: \"email\",\n    type: \"email\"\n  },{\n    name: \"password\",\n    placeholder: \"password\",\n    type: \"password\"\n  },{\n    name: \"pesel\",\n    placeholder: \"pesel\",\n    type: \"text\",\n    maxlength:11\n  },{\n    name: \"dob\",\n    placeholder: \"dob\",\n    type: \"date\"\n  },{\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn\" \n  }]\n  \nconst props = {\n    name: 'loginForm',\n    method: 'POST',\n    action: '/perform_login',\n    inputs: inputs\n  }\n  \nconst params = new URLSearchParams(window.location.search)\nclass RegistrationComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstName: '',\n            lastName:'',\n            email:'',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n\n       AuthenticationService\n            .executeBasicAuthenticationService(this.state.firstName,this.state.lastName,this.state.email, this.state.password)\n            .then(() => {\n                AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.lastName,this.state.email,this.state.password)\n\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    // render() {\n    //     return (\n    //         <div>\n    //             <h1>Login</h1>\n    //             <div className=\"container\">\n    //                 {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n    //                 {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n    //                 {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n    //                 {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n    //                 User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n    //                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n    //                 <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n    render(){\n        return(\n            <>\n                <RegistrationForm {...props} error={params.get('error')} />\n            </>\n        )\n    }\n}\n\nexport default RegistrationComponent"]},"metadata":{},"sourceType":"module"}