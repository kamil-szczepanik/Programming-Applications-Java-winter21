{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport DoctorComponent from './components/DoctorComponent';\nimport AuthService from \"./services/auth.service\";\nimport { Component } from 'react'; // import AppointmentComponent from './components/AppointmentComponent';\n\nimport LoginComponent from './components/LoginComponent';\nimport MainAPP from './components/MAINAPP';\nimport NavigationComponent from './components/NavigationComponent';\nimport ANOTHERLoginComponent from './components/ANOTHERLoginComponent';\nimport USERTOKEN from './components/ANOTHERLoginComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n      loggedUserdata: window.response\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: ANOTHERLoginComponent.getToken(),\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logOut();\n  }\n\n  render() {\n    const {\n      currentUser,\n      showModeratorBoard,\n      showAdminBoard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(MainAPP, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/my-app/src/App.js"],"names":["DoctorComponent","AuthService","Component","LoginComponent","MainAPP","NavigationComponent","ANOTHERLoginComponent","USERTOKEN","App","constructor","props","logOut","bind","state","showModeratorBoard","showAdminBoard","currentUser","undefined","loggedUserdata","window","response","componentDidMount","user","getCurrentUser","setState","getToken","roles","includes","render"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAC,KADR;AAEXC,MAAAA,cAAc,EAAC,KAFJ;AAGXC,MAAAA,WAAW,EAACC,SAHD;AAIXC,MAAAA,cAAc,EAACC,MAAM,CAACC;AAJX,KAAb;AAOD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAGrB,WAAW,CAACsB,cAAZ,EAAb;;AAEA,QAAID,IAAJ,EAAS;AACP,WAAKE,QAAL,CAAc;AACZR,QAAAA,WAAW,EAACV,qBAAqB,CAACmB,QAAtB,EADA;AAEZX,QAAAA,kBAAkB,EAACQ,IAAI,CAACI,KAAL,CAAWC,QAAX,CAAoB,gBAApB,CAFP;AAGZZ,QAAAA,cAAc,EAAEO,IAAI,CAACI,KAAL,CAAWC,QAAX,CAAoB,YAApB;AAHJ,OAAd;AAKD;AACF;;AACDhB,EAAAA,MAAM,GAAE;AACNV,IAAAA,WAAW,CAACU,MAAZ;AACD;;AAEDiB,EAAAA,MAAM,GAAE;AACN,UAAM;AAACZ,MAAAA,WAAD;AAAcF,MAAAA,kBAAd;AAAkCC,MAAAA;AAAlC,QAAoD,KAAKF,KAA/D;AACF,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AApCyB;;AAuC5B,eAAeL,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DoctorComponent from './components/DoctorComponent';\nimport AuthService from \"./services/auth.service\";\nimport { Component } from 'react';\n// import AppointmentComponent from './components/AppointmentComponent';\nimport LoginComponent from './components/LoginComponent';\nimport MainAPP from './components/MAINAPP';\nimport NavigationComponent from './components/NavigationComponent';\nimport ANOTHERLoginComponent from './components/ANOTHERLoginComponent';\nimport USERTOKEN from './components/ANOTHERLoginComponent';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.logOut = this.logOut.bind(this);\n    this.state = {\n      showModeratorBoard:false,\n      showAdminBoard:false,\n      currentUser:undefined,\n      loggedUserdata:window.response,\n\n    };\n  }\n  componentDidMount(){\n    const user = AuthService.getCurrentUser();\n    \n    if (user){\n      this.setState({\n        currentUser:ANOTHERLoginComponent.getToken(),\n        showModeratorBoard:user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n  logOut(){\n    AuthService.logOut();\n  }\n\n  render(){\n    const {currentUser, showModeratorBoard, showAdminBoard} = this.state;\n  return (\n    <div className=\"App\">\n\n      <MainAPP />\n\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}