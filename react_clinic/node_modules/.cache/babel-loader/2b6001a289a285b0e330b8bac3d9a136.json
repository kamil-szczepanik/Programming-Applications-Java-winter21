{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/my-app/src/components/AddAppointment.js\";\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport specialisationService from '../services/specialistionService';\nimport axios from 'axios';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = event => {\n      event.preventDefault();\n      const USERTOKEN = window.response.accessToken;\n      let config = {\n        headers: {\n          'Authorization': `Bearer ${USERTOKEN}`,\n          'Access-Control-Allow-Origin': 'http://localhost:3000/'\n        }\n      };\n\n      if (this.state.choosenAppoitmentId !== null) {\n        axios.post('http://localhost:8080/api/appointment/addPatientToAppointment', {\n          \"id\": parseInt(this.state.choosenAppoitmentId)\n        }).then(response => {\n          console.log(response);\n          alert(\"Pomyślnie dodano wizytę!\");\n          this.props.history.push('/myProfile');\n        }).catch(error => {\n          alert(\"Nie udało się dodać wizyty!\");\n          this.props.history.push('/myProfile');\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      appDocID: null,\n      choosenAppoitmentId: null,\n      specialisations: []\n    };\n  }\n\n  componentDidMount() {\n    if (window.response !== undefined) {\n      DoctorService.getDoctors().then(response => {\n        this.setState({\n          doctors: response.data\n        });\n      });\n      AppointmentService.getAppointments().then(response => {\n        this.setState({\n          appointments: response.data\n        });\n      });\n      specialisationService.getSpecialisation().then(response => {\n        this.setState({\n          specialisations: response.data\n        });\n      });\n    }\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  dateHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appDate: event.target.value\n    });\n    console.log(this.state.appDate);\n  }\n\n  timeHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appTime: event.target.value\n    });\n    console.log(this.state.appTime);\n  }\n\n  onChangeValue(event) {\n    this.setState({\n      appDocID: event.target.value\n    });\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n\n    if (window.response === undefined) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"DOCTOR\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/addAppointmentDoctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"ADMIN\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (window.response.roles[0] === \"PATIENT\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [window.response.roles[0] === \"DOCTOR\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/addAppointmentDoctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 54\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          id: \"appointment_form\",\n          onSubmit: this.handlePressedButton,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctorsInAppointmentCreating\",\n            onChange: this.onChangeValue.bind(this),\n            children: this.state.doctors.map(doctor => {\n              {\n                this.state.specialisations.map(specialisation => {\n                  if (specialisation === doctor.specialisation) {\n                    alert(doctor.firstName + doctor.lastName + doctor.specialisation);\n                    return (\n                      /*#__PURE__*/\n                      // <div className=\"doctorsInAppointmentCreating\">\n                      //     <input type=\"radio\" id={doctor.id}\n                      //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                      //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                      // </div>\n                      _jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"radio\",\n                          id: doctor.id,\n                          name: \"doctors\",\n                          value: doctor.id,\n                          onChange: e => this.doctorIdHandleChange,\n                          required: true\n                        }, doctor.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: doctor.firstName + doctor.lastName + DoctorService.Specialisation,\n                          children: doctor.firstName + \" \" + doctor.lastName + \" \" + doctor.specialisation\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true)\n                    );\n                  }\n                });\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.appDate,\n            name: \"appointments\",\n            id: \"appointments\",\n            onChange: e => this.setState({\n              choosenAppoitmentId: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: null,\n              children: \"-----Wybierz Termin-----\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this), this.state.appointments.map(appointment => {\n              if (appointment.patientId === null && parseInt(this.state.appDocID) === appointment.doctorId) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: appointment.id,\n                    children: appointment.date\n                  }, appointment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.appTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            children: \"Dodaj wizyt\\u0119\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/my-app/src/components/AddAppointment.js"],"names":["React","useState","props","DoctorService","AppointmentService","specialisationService","axios","useHistory","Redirect","AddAppointment","Component","constructor","handlePressedButton","event","preventDefault","USERTOKEN","window","response","accessToken","config","headers","state","choosenAppoitmentId","post","parseInt","then","console","log","alert","history","push","catch","error","doctors","appointments","appDocID","specialisations","componentDidMount","undefined","getDoctors","setState","data","getAppointments","getSpecialisation","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","dateHandleChange","appDate","target","value","timeHandleChange","appTime","onChangeValue","render","today","roles","bind","map","doctor","specialisation","firstName","lastName","id","e","doctorIdHandleChange","Specialisation","appointment","patientId","doctorId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport specialisationService from '../services/specialistionService';\nimport axios from 'axios';\nimport {useHistory, Redirect} from \"react-router-dom\";\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            appDocID:null,\n            choosenAppoitmentId:null,\n            specialisations:[],\n\n\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        if(window.response!==undefined){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        specialisationService.getSpecialisation().then((response)=>{\n            this.setState({specialisations: response.data})\n        });}\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    handlePressedButton = (event) =>{\n        event.preventDefault()\n        const USERTOKEN = window.response.accessToken;\n        let config = {\n            headers:{\n                'Authorization': `Bearer ${USERTOKEN}`,\n                'Access-Control-Allow-Origin':'http://localhost:3000/'}\n            };\n        if (this.state.choosenAppoitmentId!==null){\n            axios.post('http://localhost:8080/api/appointment/addPatientToAppointment', {\"id\":parseInt(this.state.choosenAppoitmentId)})\n            .then(response =>{\n                console.log(response)\n                alert(\"Pomyślnie dodano wizytę!\")\n                this.props.history.push('/myProfile')\n            })\n            .catch(error=>{\n                alert(\"Nie udało się dodać wizyty!\")\n                this.props.history.push('/myProfile')\n\n                console.log(error)\n            })\n        }\n        \n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        if(window.response===undefined){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"DOCTOR\"){\n            return(\n                <Redirect to='/addAppointmentDoctor'/>\n                )\n        }\n        if(window.response.roles[0]===\"ADMIN\"){\n            return(\n                <Redirect to='/'/>\n                )\n        }\n        if(window.response.roles[0]===\"PATIENT\"){\n        return(\n            <>\n                {window.response.roles[0]===\"DOCTOR\"?<Redirect to='/addAppointmentDoctor'/>:null}\n\n                <form  method=\"post\" id=\"appointment_form\" onSubmit={this.handlePressedButton}>\n                    <div className=\"doctorsInAppointmentCreating\" onChange={this.onChangeValue.bind(this)}>\n                    {this.state.doctors.map(doctor=>{\n                        {this.state.specialisations.map(specialisation=>{\n                            if (specialisation===doctor.specialisation){\n                                alert(doctor.firstName+doctor.lastName+doctor.specialisation);\n                                return(\n                            \n                                    // <div className=\"doctorsInAppointmentCreating\">\n                                    //     <input type=\"radio\" id={doctor.id}\n                                    //     name={doctor.firstName + doctor.lastName} value={doctor.firstName + doctor.lastName}/>\n                                    //     <label htmlFor={doctor.firstName + doctor.lastName}>{doctor.firstName + doctor.lastName}</label>\n                                    // </div>\n                                        <>\n                                            \n                                                <input key={doctor.id} type=\"radio\" id={doctor.id}\n                                                name=\"doctors\" value={doctor.id} onChange={(e)=>this.doctorIdHandleChange} required/>\n                                                <label htmlFor={doctor.firstName + doctor.lastName + DoctorService.Specialisation}>{doctor.firstName + \" \" + doctor.lastName + \" \"  + doctor.specialisation}</label>\n                                            \n                                        </>\n                                    \n                                    \n                                        \n                                    )\n                            }\n                        })}\n                        \n                    })}\n                    </div>\n                \n                    {/* <div className=\"dateInAppointmentCreating\" >\n                        \n                            <label htmlFor=\"1\">Data wizyty:</label>\n                            <input value={this.state.appDate} onChange={(e)=>this.setState({appDate:e.target.value})} type=\"date\" id=\"1234\" min={this.dateToString(today,2)} max={this.dateToString(today,16)} required/>\n                    </div> */}\n                    <select value={this.state.appDate} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({choosenAppoitmentId:e.target.value})}>\n                    <option value={null}>-----Wybierz Termin-----</option>\n                        {this.state.appointments.map(appointment=>{\n                            \n                            if ( appointment.patientId===null&&parseInt(this.state.appDocID)===appointment.doctorId){\n                               \n\n                                \n                                return(\n                                <>\n                                    \n                                        <option key={appointment.id} value={appointment.id}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )}\n                        })}\n                    </select>\n                  \n\n\n                    <p>{this.state.appTime}</p>\n                    <button className=\"btn btn-success\" type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n                \n           </> \n        )\n    }\n}\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}