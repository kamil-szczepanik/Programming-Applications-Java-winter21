{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment_Doctor.js\";\nimport React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport PatientService from '../services/PatientService';\nimport CreatePatient from './CreatePatient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePressedButton = event => {\n      this.createPatientIfNeeded();\n      event.preventDefault();\n      var date_String = \"\";\n      date_String += this.state.appDate + \"T\" + this.state.appTime + ':00';\n      axios.post('http://localhost:8080/api/appointment', {\n        \"patient_id\": this.state.appPacID,\n        \"doctor_id\": this.state.appDocID,\n        \"date\": date_String\n      }).then(response => {\n        console.log(response);\n        alert(\"Pomyślnie dodano wizytę!\");\n      }).catch(error => {\n        alert(\"Nie udało się dodać wizyty!\");\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      doctors: [],\n      appointments: [],\n      patients: [],\n      appDate: null,\n      appTime: null,\n      appDocID: 1,\n      patient_pesel: null\n    };\n  }\n\n  componentDidMount() {\n    DoctorService.getDoctors().then(response => {\n      this.setState({\n        doctors: response.data\n      });\n    });\n    AppointmentService.getAppointments().then(response => {\n      this.setState({\n        appointments: response.data\n      });\n    });\n    PatientService.getPatients().then(response => {\n      this.setState({\n        patients: response.data\n      });\n    });\n  }\n\n  dateToString(given_date, delay = 0) {\n    var date = new Date();\n    date.setDate(given_date.getDate() + delay);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var yyyy = date.getFullYear();\n    return yyyy + '-' + mm + '-' + dd;\n  }\n\n  createPatient() {}\n\n  createPatientIfNeeded() {\n    var isPatientCreated = false;\n    this.patients.map(patient => {\n      if (patient.pesel === this.state.patient_pesel) {\n        isPatientCreated = true;\n      }\n    });\n\n    if (isPatientCreated !== true) {\n      this.createPatient();\n    }\n  }\n\n  dateHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appDate: event.target.value\n    });\n    console.log(this.state.appDate);\n  }\n\n  timeHandleChange(event) {\n    event.preventDefault();\n    this.setState({\n      appTime: event.target.value\n    });\n    console.log(this.state.appTime);\n  }\n\n  onChangeValue(event) {\n    this.setState({\n      appDocID: event.target.value\n    });\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Je\\u017Celi pacjent nie ma jeszcze konta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreatePatient, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        id: \"appointment_form_doc\",\n        onSubmit: this.handlePressedButton,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pesel\",\n          children: \"Pesel pacjenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.patient_pesel,\n          onChange: e => this.setState({\n            petient_pesel: e.target.value\n          }),\n          type: \"text\",\n          id: \"pesel\",\n          name: \"pesel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.appDate,\n          name: \"appointments\",\n          id: \"appointments\",\n          onChange: e => this.setState({\n            appTime: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"appointments\",\n            children: \"Wybierz termin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"appointment:\",\n            children: this.state.appointments.map(appointment => {\n              if (this.state.appDocID === appointment.doctor_id && appointment.patient_id === \"\") return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: appointment.date,\n                  children: appointment.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.appTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Dodaj wizyt\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/AddAppointment_Doctor.js"],"names":["React","useState","props","DoctorService","AppointmentService","axios","PatientService","CreatePatient","AddAppointment","Component","constructor","handlePressedButton","event","createPatientIfNeeded","preventDefault","date_String","state","appDate","appTime","post","appPacID","appDocID","then","response","console","log","alert","catch","error","doctors","appointments","patients","patient_pesel","componentDidMount","getDoctors","setState","data","getAppointments","getPatients","dateToString","given_date","delay","date","Date","setDate","getDate","dd","String","padStart","mm","getMonth","yyyy","getFullYear","createPatient","isPatientCreated","map","patient","pesel","dateHandleChange","target","value","timeHandleChange","onChangeValue","render","today","e","petient_pesel","appointment","doctor_id","patient_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport props from 'prop-types';\nimport DoctorService from '../services/DoctorService';\nimport AppointmentService from '../services/AppointmentService';\nimport axios from 'axios';\nimport PatientService from '../services/PatientService';\nimport CreatePatient from './CreatePatient';\n\n\nclass AddAppointment extends React.Component{\n    \n    \n\n    constructor(props){\n        super(props)\n        this.state = {\n            doctors:[],\n            appointments:[],\n            patients:[],\n            appDate:null,\n            appTime:null,\n            appDocID:1,\n            patient_pesel:null,\n\n            \n        }\n    }\n    \n\n    componentDidMount(){\n        DoctorService.getDoctors().then((response)=>{\n            this.setState({doctors: response.data})\n        });\n        AppointmentService.getAppointments().then((response)=>{\n            this.setState({appointments: response.data})\n        });\n        PatientService.getPatients().then((response)=>{\n            this.setState({patients: response.data})\n        });\n    }\n    dateToString(given_date, delay=0){\n        var date = new Date();\n        date.setDate(given_date.getDate()+delay);\n        var dd = String(date.getDate()).padStart(2, '0');\n        var mm = String(date.getMonth() + 1).padStart(2, '0');\n        var yyyy = date.getFullYear();\n\n        return yyyy + '-' + mm + '-' + dd;\n\n    }\n    createPatient(){\n        \n    }\n    createPatientIfNeeded(){\n        var isPatientCreated = false\n        this.patients.map(patient=>{\n            if (patient.pesel===this.state.patient_pesel){\n                isPatientCreated=true;\n            }\n        })\n\n        if (isPatientCreated!==true){\n            this.createPatient()\n        } \n\n    }\n    handlePressedButton = (event) =>{\n        this.createPatientIfNeeded()\n        event.preventDefault()\n        var date_String = \"\"\n        date_String+=this.state.appDate + \"T\" + this.state.appTime + ':00'\n        axios.post('http://localhost:8080/api/appointment', { \"patient_id\":this.state.appPacID, \"doctor_id\":this.state.appDocID,\"date\":date_String,})\n        .then(response =>{\n            console.log(response)\n            alert(\"Pomyślnie dodano wizytę!\")\n        })\n        .catch(error=>{\n            alert(\"Nie udało się dodać wizyty!\")\n            console.log(error)\n        })\n    }\n\n    dateHandleChange(event){\n        event.preventDefault();\n\n        this.setState({appDate:event.target.value})\n        console.log(this.state.appDate);\n\n    }\n   timeHandleChange(event){\n        event.preventDefault();\n        this.setState({appTime:event.target.value})\n        console.log(this.state.appTime);\n\n    }\n    \n    onChangeValue(event){\n        this.setState({appDocID:event.target.value});\n    }\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n\n        return(\n            <>  \n                <p>Jeżeli pacjent nie ma jeszcze konta:</p>\n                <CreatePatient/>\n\n\n\n                <br></br>\n                <br></br>\n\n                <form  method=\"post\" id=\"appointment_form_doc\" onSubmit={this.handlePressedButton}>\n                    <label htmlFor=\"pesel\">Pesel pacjenta</label>\n                    <input value={this.state.patient_pesel} onChange={e=>this.setState({petient_pesel:e.target.value})} type=\"text\" id=\"pesel\" name=\"pesel\"/>\n                    <br></br>\n                    <select value={this.state.appDate} name=\"appointments\" id=\"appointments\" onChange={(e)=>this.setState({appTime:e.target.value})}>\n                    <label htmlFor=\"appointments\">Wybierz termin:</label>\n                    <optgroup label=\"appointment:\">\n                        {this.state.appointments.map(appointment=>{\n\n                            if (this.state.appDocID===appointment.doctor_id && appointment.patient_id===\"\")return(\n                                <>\n                                    \n                                        <option value={appointment.date}>{appointment.date}</option>\n                                       \n                                </>\n                            \n                            \n                                \n                            )\n                        })}\n                        </optgroup>\n                    </select>\n                  \n\n                    <p>{this.state.appTime}</p>\n                    <button type='submit'>Dodaj wizytę</button>\n                    \n                </form>\n                \n           </> \n        )\n    }\n}\n\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}