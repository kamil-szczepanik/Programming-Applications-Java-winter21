{"ast":null,"code":"var _jsxFileName = \"/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/ANOTHERLoginComponent.js\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport context from '../components/context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'email',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n      accountID: null,\n      email: null,\n      roles: null,\n      accessToken: null,\n      tokenType: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  getToken() {\n    return this.state.getToken;\n  }\n\n  loginClicked() {\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(response => {\n      this.setState({\n        accountID: response.data.id,\n        email: response.data.email,\n        roles: response.data.roles,\n        accessToken: response.data.accessToken,\n        tokenType: response.data.tokenType\n      });\n      window.response = response.data;\n      alert(\"Zalogowano pomyślnie\");\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/myProfile`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 51\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Sucessful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 55\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/michal/code/pap21l-z07/Clinic/src/main/frontend/my-app/src/components/ANOTHERLoginComponent.js"],"names":["React","Component","AuthenticationService","context","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","accountID","email","roles","accessToken","tokenType","handleChange","bind","loginClicked","event","setState","target","name","value","getToken","executeBasicAuthenticationService","then","response","data","id","window","alert","registerSuccessfulLogin","history","push","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthenticationService from '../services/AuthenticationService';\nimport context from '../components/context/context';\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'email',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false,\n            accountID:null,\n            email:null,\n            roles:null,\n            accessToken:null,\n            tokenType:null,\n\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n    getToken(){\n        return this.state.getToken;\n    }\n    loginClicked() {\n\n        AuthenticationService\n            .executeBasicAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                this.setState({accountID:response.data.id,\n                    email:response.data.email,\n                    roles:response.data.roles,\n                    accessToken:response.data.accessToken,\n                    tokenType:response.data.tokenType})\n                window.response=response.data;\n                alert(\"Zalogowano pomyślnie\")\n                \n                AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n                this.props.history.push(`/myProfile`);\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}